{"version":3,"sources":["./dist/tempus-dominus.js"],"names":["tempusDominus","$","core","luxon","_interopDefaultLegacy","e","default","_interopNamespace","__esModule","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","Unit","$__default","luxon__namespace","DateTime","Date","constructor","super","arguments","this","locale","setLocale","value","convert","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","clone","year","month","hours","minutes","seconds","startOf","unit","undefined","setMilliseconds","setSeconds","setMinutes","setHours","manipulate","weekDay","setDate","setMonth","endOf","format","template","Intl","DateTimeFormat","isBefore","compare","valueOf","isAfter","isSame","isBetween","left","right","inclusivity","leftInclusivity","rightInclusivity","parts","dateStyle","timeStyle","formatToParts","filter","x","type","secondsFormatted","second","minutesFormatted","minute","hoursFormatted","hour","twelveHoursFormatted","hour12","meridiem","_a","find","p","dateFormatted","week","startOfYear","getDay","Math","round","monthFormatted","setFullYear","TdError","Error","NAME","Namespace","version","dataKey","events","Events","key","change","update","error","show","hide","blur","focus","keyup","keydown","css","Css","widget","calendarHeader","switch","toolbar","noHighlight","sideBySide","previous","next","disabled","old","new","active","dateContainer","decadesContainer","decade","yearsContainer","monthsContainer","daysContainer","day","calendarWeeks","dayOfTheWeek","today","weekend","timeContainer","separator","clockContainer","hourContainer","minuteContainer","secondContainer","toggleMeridiem","collapsing","collapse","inline","errorMessages","ErrorMessages","base","failedToSetInvalidDate","failedToParseInput","unexpectedOption","optionName","code","unexpectedOptions","join","unexpectedOptionValue","badValue","validOptions","typeMismatch","badType","expectedType","numbersOutOfRage","lower","upper","failedToParseDate","soft","console","warn","mustProvideElement","subscribeMismatch","conflictingConfiguration","message","dateString","DefaultOptions","restrictions","minDate","maxDate","disabledDates","enabledDates","daysOfWeekDisabled","disabledTimeIntervals","disabledHours","enabledHours","display","icons","time","up","down","clear","close","viewMode","toolbarPlacement","keepOpen","buttons","components","calendar","decades","clock","useTwentyfourHour","stepping","useCurrent","defaultDate","localization","selectMonth","previousMonth","nextMonth","selectYear","previousYear","nextYear","selectDecade","previousDecade","nextDecade","previousCentury","nextCentury","pickHour","incrementHour","decrementHour","pickMinute","incrementMinute","decrementMinute","pickSecond","incrementSecond","decrementSecond","selectTime","selectDate","dayViewHeaderFormat","keepInvalid","debug","allowInputToggle","viewDate","multipleDates","multipleDatesSeparator","promptTimeOnDateChange","promptTimeOnDateChangeTransitionDelay","hooks","inputParse","inputFormat","DatePickerModes","name","className","step","Collapse","getTransitionDurationFromElement","element","transitionDuration","transitionDelay","window","getComputedStyle","floatTransitionDuration","Number","parseFloat","floatTransitionDelay","split","toggle","target","callback","classList","contains","style","height","remove","add","timeOut","setTimeout","scrollHeight","getBoundingClientRect","offsetHeight","Actions","context","_context","do","action","currentTarget","dataset","lastPicked","dates","_viewDate","manipulateAndSet","newDate","_validation","isValid","_setValue","lastPickedIndex","ActionTypes","_currentViewMode","_viewUpdate","_display","_showMode","pickerSwitch","_updateCalendarHeader","_minViewModeNumber","_options","selectDay","index","pickedIndex","_hasTime","selectHour","showClock","selectMinute","selectSecond","incrementHours","incrementMinutes","incrementSeconds","decrementHours","decrementMinutes","decrementSeconds","togglePicker","querySelectorAll","htmlElement","getAttribute","setAttribute","innerHTML","_iconTag","outerHTML","_update","showHours","showMinutes","showSeconds","classToUse","getElementsByClassName","DateDisplay","_picker","container","document","createElement","append","_daysOfTheWeek","div","appendChild","i","switcher","parentElement","getElementsByTagName","innerDate","containerClone","innerText","classes","push","_unset","isPicked","row","htmlDivElement","weekday","MonthDisplay","OptionConverter","_mergeOptions","providedOptions","mergeTo","newOptions","path","ignoreProperties","processKey","providedType","defaultType","dateTime","_dateConversion","_typeCheckNumberArray","length","_typeCheckDateArray","Array","isArray","valueObject","vk","subOptionName","keyOptions","includes","substring","toString","spread","provided","mergeOption","copyTo","unsupportedOptions","flattenedOptions","_flattenDefaultOptions","errors","map","didYouMean","y","defaultOptionValue","hasOwnProperty","lastIndexOf","_dataToOptions","options","eData","DOMStringMap","dataOptions","objectToNormalized","object","lowered","toLowerCase","rabbitHole","optionSubgroup","keyOption","internalObject","optionsLower","startsWith","_dateTypeCheck","JSON","stringify","converted","_flatback","deepKeys","t","pre","entries","flatMap","v","_validateConflcits","config","Dates","_dates","picked","set","from","targetDate","getFormatByUnit","innerDateFormatted","indexOf","_triggerEvent","oldDate","isClear","getStartEndYear","factor","startYear","floor","noIndex","updateInput","_input","newValue","splice","reason","YearDisplay","_startYear","_endYear","DecadeDisplay","start","end","_startDecade","_endDecade","pickedYears","textContent","startDecadeYear","endDecadeYear","TimeDisplay","_gridColumns","_grid","timesDiv","querySelector","gridTemplateAreas","top","middle","bottom","upIcon","downIcon","separatorColon","cloneNode","getSeparator","colon","divElement","button","trim","HourDisplay","MinuteDisplay","secondDisplay","Display","_isVisible","_documentClickEvent","composedPath","_element","_actionsClickEvent","_action","_dateDisplay","_monthDisplay","_yearDisplay","_decadeDisplay","_timeDisplay","_hourDisplay","_minuteDisplay","_secondDisplay","_widget","isVisible","_hasDate","_b","tries","direction","_buildWidget","body","_popperInstance","createPopper","modifiers","enabled","placement","documentElement","dir","addEventListener","max","min","datePickerMode","picker","showing","removeEventListener","_dispose","parentNode","removeChild","dateView","_headTemplate","timeView","_toolbar","arrow","title","icon","iconClass","svg","DOMTokenList","prototype","apply","_rebuild","wasVisible","Validation","granularity","_isInDisabledDates","_isInEnabledDates","_isInDisabledHours","_isInEnabledHours","to","testDate","formattedDate","__proto__","TempusDominus","_subscribers","_isDisabled","_notifyChangeEventContext","_inputChangeEvent","setViewDate","valueSplit","_toggleClickEvent","_initializeOptions","_initializeInput","_initializeToggle","updateOptions","reset","disable","enable","removeAttribute","subscribe","eventTypes","callbacks","callBackArray","returnArray","eventType","unsubscribe","_unsubscribe","bind","dispose","_toggle","event","_handleAfterChangeEvent","dispatchEvent","CustomEvent","detail","jQuery","trigger","publish","eventName","includeDataset","findIndex","_","fromJSDate","toFormat","numberingSystem","NumberFormat","resolvedOptions","parsedDate","fromFormat","toJSDate","getTime","tagName","query","tdTargetInput","tdTargetToggle","clearTimeout","_currentPromptTimeTimeout","jQueryInterface","option","argument","jQueryHandleThis","each","me","data","extend","isDateUpdateThroughDateOptionFromClientCode","ret","getSelectorFromElement","$element","$selector","selector","attr","test","fn","Constructor","noConflict","Popper"],"mappings":"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","sourcesContent":["var tempusDominus = (function ($, core, luxon) {\n    'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    function _interopNamespace(e) {\n        if (e && e.__esModule) return e;\n        var n = Object.create(null);\n        if (e) {\n            Object.keys(e).forEach(function (k) {\n                if (k !== 'default') {\n                    var d = Object.getOwnPropertyDescriptor(e, k);\n                    Object.defineProperty(n, k, d.get ? d : {\n                        enumerable: true,\n                        get: function () {\n                            return e[k];\n                        }\n                    });\n                }\n            });\n        }\n        n['default'] = e;\n        return n;\n    }\n\n    var $__default = /*#__PURE__*/_interopDefaultLegacy($);\n    var luxon__namespace = /*#__PURE__*/_interopNamespace(luxon);\n\n    var Unit;\r\n    (function (Unit) {\r\n        Unit[\"seconds\"] = \"seconds\";\r\n        Unit[\"minutes\"] = \"minutes\";\r\n        Unit[\"hours\"] = \"hours\";\r\n        Unit[\"date\"] = \"date\";\r\n        Unit[\"month\"] = \"month\";\r\n        Unit[\"year\"] = \"year\";\r\n    })(Unit || (Unit = {}));\r\n    /**\r\n     * For the most part this object behaves exactly the same way\r\n     * as the native Date object with a little extra spice.\r\n     */\r\n    class DateTime extends Date {\r\n        constructor() {\r\n            super(...arguments);\r\n            /**\r\n             * Used with Intl.DateTimeFormat\r\n             */\r\n            this.locale = 'default';\r\n        }\r\n        /**\r\n         * Chainable way to set the {@link locale}\r\n         * @param value\r\n         */\r\n        setLocale(value) {\r\n            this.locale = value;\r\n            return this;\r\n        }\r\n        /**\r\n         * Converts a plain JS date object to a DateTime object.\r\n         * Doing this allows access to format, etc.\r\n         * @param  date\r\n         */\r\n        static convert(date) {\r\n            if (!date)\r\n                throw `A date is required`;\r\n            return new DateTime(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\r\n        }\r\n        /**\r\n         * Native date manipulations are not pure functions. This function creates a duplicate of the DateTime object.\r\n         */\r\n        get clone() {\r\n            return new DateTime(this.year, this.month, this.date, this.hours, this.minutes, this.seconds, this.getMilliseconds()).setLocale(this.locale);\r\n        }\r\n        /**\r\n         * Sets the current date to the start of the {@link unit} provided\r\n         * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).startOf('month')\r\n         * would return April 1, 2021, 12:00:00.000 AM (midnight)\r\n         * @param unit\r\n         */\r\n        startOf(unit) {\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            switch (unit) {\r\n                case 'seconds':\r\n                    this.setMilliseconds(0);\r\n                    break;\r\n                case 'minutes':\r\n                    this.setSeconds(0, 0);\r\n                    break;\r\n                case 'hours':\r\n                    this.setMinutes(0, 0, 0);\r\n                    break;\r\n                case 'date':\r\n                    this.setHours(0, 0, 0, 0);\r\n                    break;\r\n                case 'weekDay':\r\n                    this.startOf(Unit.date);\r\n                    this.manipulate(0 - this.weekDay, Unit.date);\r\n                    break;\r\n                case 'month':\r\n                    this.startOf(Unit.date);\r\n                    this.setDate(1);\r\n                    break;\r\n                case 'year':\r\n                    this.startOf(Unit.date);\r\n                    this.setMonth(0, 1);\r\n                    break;\r\n            }\r\n            return this;\r\n        }\r\n        /**\r\n         * Sets the current date to the end of the {@link unit} provided\r\n         * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).endOf('month')\r\n         * would return April 30, 2021, 11:59:59.999 PM\r\n         * @param unit\r\n         */\r\n        endOf(unit) {\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            switch (unit) {\r\n                case 'seconds':\r\n                    this.setMilliseconds(999);\r\n                    break;\r\n                case 'minutes':\r\n                    this.setSeconds(59, 999);\r\n                    break;\r\n                case 'hours':\r\n                    this.setMinutes(59, 59, 999);\r\n                    break;\r\n                case 'date':\r\n                    this.setHours(23, 59, 59, 999);\r\n                    break;\r\n                case 'weekDay':\r\n                    this.startOf(Unit.date);\r\n                    this.manipulate(6 - this.weekDay, Unit.date);\r\n                    break;\r\n                case 'month':\r\n                    this.endOf(Unit.date);\r\n                    this.manipulate(1, Unit.month);\r\n                    this.setDate(0);\r\n                    break;\r\n                case 'year':\r\n                    this.endOf(Unit.date);\r\n                    this.manipulate(1, Unit.year);\r\n                    this.setDate(0);\r\n                    break;\r\n            }\r\n            return this;\r\n        }\r\n        /**\r\n         * Change a {@link unit} value. Value can be positive or negative\r\n         * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).manipulate(1, 'month')\r\n         * would return May 30, 2021, 11:45:32.984 AM\r\n         * @param value A positive or negative number\r\n         * @param unit\r\n         */\r\n        manipulate(value, unit) {\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            this[unit] += value;\r\n            return this;\r\n        }\r\n        /**\r\n         * Returns a string format.\r\n         * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\r\n         * for valid templates and locale objects\r\n         * @param template An object. Uses browser defaults otherwise.\r\n         * @param locale Can be a string or an array of strings. Uses browser defaults otherwise.\r\n         */\r\n        format(template, locale = this.locale) {\r\n            return new Intl.DateTimeFormat(locale, template).format(this);\r\n        }\r\n        /**\r\n         * Return true if {@link compare} is before this date\r\n         * @param compare The Date/DateTime to compare\r\n         * @param unit If provided, uses {@link startOf} for\r\n         * comparision.\r\n         */\r\n        isBefore(compare, unit) {\r\n            if (!unit)\r\n                return this.valueOf() < compare.valueOf();\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            return (this.clone.startOf(unit).valueOf() < compare.clone.startOf(unit).valueOf());\r\n        }\r\n        /**\r\n         * Return true if {@link compare} is after this date\r\n         * @param compare The Date/DateTime to compare\r\n         * @param unit If provided, uses {@link startOf} for\r\n         * comparision.\r\n         */\r\n        isAfter(compare, unit) {\r\n            if (!unit)\r\n                return this.valueOf() > compare.valueOf();\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            return (this.clone.startOf(unit).valueOf() > compare.clone.startOf(unit).valueOf());\r\n        }\r\n        /**\r\n         * Return true if {@link compare} is same this date\r\n         * @param compare The Date/DateTime to compare\r\n         * @param unit If provided, uses {@link startOf} for\r\n         * comparision.\r\n         */\r\n        isSame(compare, unit) {\r\n            if (!unit)\r\n                return this.valueOf() === compare.valueOf();\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            compare = DateTime.convert(compare);\r\n            return (this.clone.startOf(unit).valueOf() === compare.startOf(unit).valueOf());\r\n        }\r\n        /**\r\n         * Check if this is between two other DateTimes, optionally looking at unit scale. The match is exclusive.\r\n         * @param left\r\n         * @param right\r\n         * @param unit.\r\n         * @param inclusivity. A [ indicates inclusion of a value. A ( indicates exclusion.\r\n         * If the inclusivity parameter is used, both indicators must be passed.\r\n         */\r\n        isBetween(left, right, unit, inclusivity = '()') {\r\n            if (unit && this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            const leftInclusivity = inclusivity[0] === '(';\r\n            const rightInclusivity = inclusivity[1] === ')';\r\n            return (((leftInclusivity\r\n                ? this.isAfter(left, unit)\r\n                : !this.isBefore(left, unit)) &&\r\n                (rightInclusivity\r\n                    ? this.isBefore(right, unit)\r\n                    : !this.isAfter(right, unit))) ||\r\n                ((leftInclusivity\r\n                    ? this.isBefore(left, unit)\r\n                    : !this.isAfter(left, unit)) &&\r\n                    (rightInclusivity\r\n                        ? this.isAfter(right, unit)\r\n                        : !this.isBefore(right, unit))));\r\n        }\r\n        /**\r\n         * Returns flattened object of the date. Does not include literals\r\n         * @param locale\r\n         * @param template\r\n         */\r\n        parts(locale = this.locale, template = { dateStyle: 'full', timeStyle: 'long' }) {\r\n            const parts = {};\r\n            new Intl.DateTimeFormat(locale, template)\r\n                .formatToParts(this)\r\n                .filter((x) => x.type !== 'literal')\r\n                .forEach((x) => (parts[x.type] = x.value));\r\n            return parts;\r\n        }\r\n        /**\r\n         * Shortcut to Date.getSeconds()\r\n         */\r\n        get seconds() {\r\n            return this.getSeconds();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setSeconds()\r\n         */\r\n        set seconds(value) {\r\n            this.setSeconds(value);\r\n        }\r\n        /**\r\n         * Returns two digit hours\r\n         */\r\n        get secondsFormatted() {\r\n            return this.format({ second: \"2-digit\" });\r\n        }\r\n        /**\r\n         * Shortcut to Date.getMinutes()\r\n         */\r\n        get minutes() {\r\n            return this.getMinutes();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setMinutes()\r\n         */\r\n        set minutes(value) {\r\n            this.setMinutes(value);\r\n        }\r\n        /**\r\n         * Returns two digit hours\r\n         */\r\n        get minutesFormatted() {\r\n            return this.format({ minute: \"2-digit\" });\r\n        }\r\n        /**\r\n         * Shortcut to Date.getHours()\r\n         */\r\n        get hours() {\r\n            return this.getHours();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setHours()\r\n         */\r\n        set hours(value) {\r\n            this.setHours(value);\r\n        }\r\n        /**\r\n         * Returns two digit hours\r\n         */\r\n        get hoursFormatted() {\r\n            return this.format({ hour: \"2-digit\" });\r\n        }\r\n        /**\r\n         * Returns two digit hours but in twelve hour mode e.g. 13 -> 1\r\n         */\r\n        get twelveHoursFormatted() {\r\n            return this.format({ hour12: true, hour: \"2-digit\" });\r\n        }\r\n        /**\r\n         * Get the meridiem of the date. E.g. AM or PM.\r\n         * If the {@link locale} provides a \"dayPeriod\" then this will be returned,\r\n         * otherwise it will return AM or PM.\r\n         * @param locale\r\n         */\r\n        meridiem(locale = this.locale) {\r\n            var _a;\r\n            return (_a = new Intl.DateTimeFormat(locale, {\r\n                hour: 'numeric',\r\n                hour12: true,\r\n            })\r\n                .formatToParts(this)\r\n                .find((p) => p.type === 'dayPeriod')) === null || _a === void 0 ? void 0 : _a.value;\r\n        }\r\n        /**\r\n         * Shortcut to Date.getDate()\r\n         */\r\n        get date() {\r\n            return this.getDate();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setDate()\r\n         */\r\n        set date(value) {\r\n            this.setDate(value);\r\n        }\r\n        /**\r\n         * Return two digit date\r\n         */\r\n        get dateFormatted() {\r\n            return this.date < 10 ? `0${this.date}` : `${this.date}`;\r\n        }\r\n        // https://github.com/you-dont-need/You-Dont-Need-Momentjs#week-of-year\r\n        /**\r\n         * Gets the week of the year\r\n         */\r\n        get week() {\r\n            const startOfYear = new Date(this.year, 0, 1);\r\n            startOfYear.setDate(startOfYear.getDate() + (1 - (startOfYear.getDay() % 7)));\r\n            return Math.round((this.valueOf() - startOfYear.valueOf()) / 604800000) + 1;\r\n        }\r\n        /**\r\n         * Shortcut to Date.getDay()\r\n         */\r\n        get weekDay() {\r\n            return this.getDay();\r\n        }\r\n        /**\r\n         * Shortcut to Date.getMonth()\r\n         */\r\n        get month() {\r\n            return this.getMonth();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setMonth()\r\n         */\r\n        set month(value) {\r\n            this.setMonth(value);\r\n        }\r\n        /**\r\n         * Return two digit, human expected month. E.g. January = 1, December = 12\r\n         */\r\n        get monthFormatted() {\r\n            return this.month + 1 < 10 ? `0${this.month}` : `${this.month}`;\r\n        }\r\n        /**\r\n         * Shortcut to Date.getFullYear()\r\n         */\r\n        get year() {\r\n            return this.getFullYear();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setFullYear()\r\n         */\r\n        set year(value) {\r\n            this.setFullYear(value);\r\n        }\r\n    }\n\n    class TdError extends Error {\r\n    }\r\n    class ErrorMessages {\r\n        constructor() {\r\n            this.base = 'TD:';\r\n            //#endregion\r\n            //#region used with notify.error\r\n            /**\r\n             * Used with an Error Event type if the user selects a date that\r\n             * fails restriction validation.\r\n             */\r\n            this.failedToSetInvalidDate = 'Failed to set invalid date';\r\n            /**\r\n             * Used with an Error Event type when a user changes the value of the\r\n             * input field directly, and does not provide a valid date.\r\n             */\r\n            this.failedToParseInput = 'Failed parse input field';\r\n            //#endregion\r\n        }\r\n        //#region out to console\r\n        /**\r\n         * Throws an error indicating that a key in the options object is invalid.\r\n         * @param optionName\r\n         */\r\n        unexpectedOption(optionName) {\r\n            const error = new TdError(`${this.base} Unexpected option: ${optionName} does not match a known option.`);\r\n            error.code = 1;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error indicating that one more keys in the options object is invalid.\r\n         * @param optionName\r\n         */\r\n        unexpectedOptions(optionName) {\r\n            const error = new TdError(`${this.base}: ${optionName.join(', ')}`);\r\n            error.code = 1;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error when an option is provide an unsupported value.\r\n         * For example a value of 'cheese' for toolbarPlacement which only supports\r\n         * 'top', 'bottom', 'default'.\r\n         * @param optionName\r\n         * @param badValue\r\n         * @param validOptions\r\n         */\r\n        unexpectedOptionValue(optionName, badValue, validOptions) {\r\n            const error = new TdError(`${this.base} Unexpected option value: ${optionName} does not accept a value of \"${badValue}\". Valid values are: ${validOptions.join(', ')}`);\r\n            error.code = 2;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error when an option value is the wrong type.\r\n         * For example a string value was provided to multipleDates which only\r\n         * supports true or false.\r\n         * @param optionName\r\n         * @param badType\r\n         * @param expectedType\r\n         */\r\n        typeMismatch(optionName, badType, expectedType) {\r\n            const error = new TdError(`${this.base} Mismatch types: ${optionName} has a type of ${badType} instead of the required ${expectedType}`);\r\n            error.code = 3;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error when an option value is  outside of the expected range.\r\n         * For example restrictions.daysOfWeekDisabled excepts a value between 0 and 6.\r\n         * @param optionName\r\n         * @param lower\r\n         * @param upper\r\n         */\r\n        numbersOutOfRage(optionName, lower, upper) {\r\n            const error = new TdError(`${this.base} ${optionName} expected an array of number between ${lower} and ${upper}.`);\r\n            error.code = 4;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error when a value for a date options couldn't be parsed. Either\r\n         * the option was an invalide string or an invalid Date object.\r\n         * @param optionName\r\n         * @param date\r\n         * @param soft If true, logs a warning instead of an error.\r\n         */\r\n        failedToParseDate(optionName, date, soft = false) {\r\n            const error = new TdError(`${this.base} Could not correctly parse \"${date}\" to a date for ${optionName}.`);\r\n            error.code = 5;\r\n            if (!soft)\r\n                throw error;\r\n            console.warn(error);\r\n        }\r\n        /**\r\n         * Throws when an element to attach to was not provided in the constructor.\r\n         */\r\n        mustProvideElement() {\r\n            const error = new TdError(`${this.base} No element was provided.`);\r\n            error.code = 6;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws if providing an array for the events to subscribe method doesn't have\r\n         * the same number of callbacks. E.g., subscribe([1,2], [1])\r\n         */\r\n        subscribeMismatch() {\r\n            const error = new TdError(`${this.base} The subscribed events does not match the number of callbacks`);\r\n            error.code = 7;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws if the configuration has conflicting rules e.g. minDate is after maxDate\r\n         */\r\n        conflictingConfiguration(message) {\r\n            const error = new TdError(`${this.base} A configuration value conflicts with another rule. ${message}`);\r\n            error.code = 8;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Logs a warning if a date option value is provided as a string, instead of\r\n         * a date/datetime object.\r\n         */\r\n        dateString() {\r\n            console.warn(`${this.base} Using a string for date options is not recommended unless you specify an ISO string.`);\r\n        }\r\n    }\n\n    //this is not the way I want this to stay but nested classes seemed to blown up once its compiled.\r\n    const NAME = 'tempus-dominus', version = '6.0.0-alpha1', dataKey = 'td';\r\n    /**\r\n     * Events\r\n     */\r\n    class Events {\r\n        constructor() {\r\n            this.key = `.${dataKey}`;\r\n            /**\r\n             * Change event. Fired when the user selects a date.\r\n             * See also EventTypes.ChangeEvent\r\n             */\r\n            this.change = `change${this.key}`;\r\n            /**\r\n             * Emit when the view changes for example from month view to the year view.\r\n             * See also EventTypes.ViewUpdateEvent\r\n             */\r\n            this.update = `update${this.key}`;\r\n            /**\r\n             * Emits when a selected date or value from the input field fails to meet the provided validation rules.\r\n             * See also EventTypes.FailEvent\r\n             */\r\n            this.error = `error${this.key}`;\r\n            /**\r\n             * Show event\r\n             * @event Events#show\r\n             */\r\n            this.show = `show${this.key}`;\r\n            /**\r\n             * Hide event\r\n             * @event Events#hide\r\n             */\r\n            this.hide = `hide${this.key}`;\r\n            // blur and focus are used in the jQuery provider but are otherwise unused.\r\n            // keyup/down will be used later for keybinding options\r\n            this.blur = `blur${this.key}`;\r\n            this.focus = `focus${this.key}`;\r\n            this.keyup = `keyup${this.key}`;\r\n            this.keydown = `keydown${this.key}`;\r\n        }\r\n    }\r\n    class Css {\r\n        constructor() {\r\n            /**\r\n             * The outer element for the widget.\r\n             */\r\n            this.widget = `${NAME}-widget`;\r\n            /**\r\n             * Hold the previous, next and switcher divs\r\n             */\r\n            this.calendarHeader = 'calendar-header';\r\n            /**\r\n             * The element for the action to change the calendar view. E.g. month -> year.\r\n             */\r\n            this.switch = 'picker-switch';\r\n            /**\r\n             * The elements for all of the toolbar options\r\n             */\r\n            this.toolbar = 'toolbar';\r\n            /**\r\n             * Disables the hover and rounding affect.\r\n             */\r\n            this.noHighlight = 'no-highlight';\r\n            /**\r\n             * Applied to the widget element when the side by side option is in use.\r\n             */\r\n            this.sideBySide = 'timepicker-sbs';\r\n            /**\r\n             * The element for the action to change the calendar view, e.g. August -> July\r\n             */\r\n            this.previous = 'previous';\r\n            /**\r\n             * The element for the action to change the calendar view, e.g. August -> September\r\n             */\r\n            this.next = 'next';\r\n            /**\r\n             * Applied to any action that would violate any restriction options. ALso applied\r\n             * to an input field if the disabled function is called.\r\n             */\r\n            this.disabled = 'disabled';\r\n            /**\r\n             * Applied to any date that is less than requested view,\r\n             * e.g. the last day of the previous month.\r\n             */\r\n            this.old = 'old';\r\n            /**\r\n             * Applied to any date that is greater than of requested view,\r\n             * e.g. the last day of the previous month.\r\n             */\r\n            this.new = 'new';\r\n            /**\r\n             * Applied to any date that is currently selected.\r\n             */\r\n            this.active = 'active';\r\n            //#region date element\r\n            /**\r\n             * The outer most element for the calendar view.\r\n             */\r\n            this.dateContainer = 'date-container';\r\n            /**\r\n             * The outer most element for the decades view.\r\n             */\r\n            this.decadesContainer = `${this.dateContainer}-decades`;\r\n            /**\r\n             * Applied to elements within the decades container, e.g. 2020, 2030\r\n             */\r\n            this.decade = 'decade';\r\n            /**\r\n             * The outer most element for the years view.\r\n             */\r\n            this.yearsContainer = `${this.dateContainer}-years`;\r\n            /**\r\n             * Applied to elements within the years container, e.g. 2021, 2021\r\n             */\r\n            this.year = 'year';\r\n            /**\r\n             * The outer most element for the month view.\r\n             */\r\n            this.monthsContainer = `${this.dateContainer}-months`;\r\n            /**\r\n             * Applied to elements within the month container, e.g. January, February\r\n             */\r\n            this.month = 'month';\r\n            /**\r\n             * The outer most element for the calendar view.\r\n             */\r\n            this.daysContainer = `${this.dateContainer}-days`;\r\n            /**\r\n             * Applied to elements within the day container, e.g. 1, 2..31\r\n             */\r\n            this.day = 'day';\r\n            /**\r\n             * If display.calendarWeeks is enabled, a column displaying the week of year\r\n             * is shown. This class is applied to each cell in that column.\r\n             */\r\n            this.calendarWeeks = 'cw';\r\n            /**\r\n             * Applied to the first row of the calendar view, e.g. Sunday, Monday\r\n             */\r\n            this.dayOfTheWeek = 'dow';\r\n            /**\r\n             * Applied to the current date on the calendar view.\r\n             */\r\n            this.today = 'today';\r\n            /**\r\n             * Applied to the locale's weekend dates on the calendar view, e.g. Sunday, Saturday\r\n             */\r\n            this.weekend = 'weekend';\r\n            //#endregion\r\n            //#region time element\r\n            /**\r\n             * The outer most element for all time related elements.\r\n             */\r\n            this.timeContainer = 'time-container';\r\n            /**\r\n             * Applied the separator columns between time elements, e.g. hour *:* minute *:* second\r\n             */\r\n            this.separator = 'separator';\r\n            /**\r\n             * The outer most element for the clock view.\r\n             */\r\n            this.clockContainer = `${this.timeContainer}-clock`;\r\n            /**\r\n             * The outer most element for the hours selection view.\r\n             */\r\n            this.hourContainer = `${this.timeContainer}-hour`;\r\n            /**\r\n             * The outer most element for the minutes selection view.\r\n             */\r\n            this.minuteContainer = `${this.timeContainer}-minute`;\r\n            /**\r\n             * The outer most element for the seconds selection view.\r\n             */\r\n            this.secondContainer = `${this.timeContainer}-second`;\r\n            /**\r\n             * Applied to each element in the hours selection view.\r\n             */\r\n            this.hour = 'hour';\r\n            /**\r\n             * Applied to each element in the minutes selection view.\r\n             */\r\n            this.minute = 'minute';\r\n            /**\r\n             * Applied to each element in the seconds selection view.\r\n             */\r\n            this.second = 'second';\r\n            /**\r\n             * Applied AM/PM toggle button.\r\n             */\r\n            this.toggleMeridiem = 'toggleMeridiem';\r\n            //#endregion\r\n            //#region collapse\r\n            /**\r\n             * Applied the element of the current view mode, e.g. calendar or clock.\r\n             */\r\n            this.show = 'show';\r\n            /**\r\n             * Applied to the currently showing view mode during a transition\r\n             * between calendar and clock views\r\n             */\r\n            this.collapsing = 'td-collapsing';\r\n            /**\r\n             * Applied to the currently hidden view mode.\r\n             */\r\n            this.collapse = 'td-collapse';\r\n            //#endregion\r\n            /**\r\n             * Applied to the widget when the option display.inline is enabled.\r\n             */\r\n            this.inline = 'inline';\r\n        }\r\n    }\r\n    class Namespace {\r\n    }\r\n    Namespace.NAME = NAME;\r\n    // noinspection JSUnusedGlobalSymbols\r\n    Namespace.version = version;\r\n    Namespace.dataKey = dataKey;\r\n    Namespace.events = new Events();\r\n    Namespace.css = new Css();\r\n    Namespace.errorMessages = new ErrorMessages();\n\n    const DefaultOptions = {\r\n        restrictions: {\r\n            minDate: undefined,\r\n            maxDate: undefined,\r\n            disabledDates: [],\r\n            enabledDates: [],\r\n            daysOfWeekDisabled: [],\r\n            disabledTimeIntervals: [],\r\n            disabledHours: [],\r\n            enabledHours: [],\r\n        },\r\n        display: {\r\n            icons: {\r\n                type: 'icons',\r\n                time: 'fas fa-clock',\r\n                date: 'fas fa-calendar',\r\n                up: 'fas fa-arrow-up',\r\n                down: 'fas fa-arrow-down',\r\n                previous: 'fas fa-chevron-left',\r\n                next: 'fas fa-chevron-right',\r\n                today: 'fas fa-calendar-check',\r\n                clear: 'fas fa-trash',\r\n                close: 'fas fa-times',\r\n            },\r\n            sideBySide: false,\r\n            calendarWeeks: false,\r\n            viewMode: 'calendar',\r\n            toolbarPlacement: 'bottom',\r\n            keepOpen: false,\r\n            buttons: {\r\n                today: false,\r\n                clear: false,\r\n                close: false,\r\n            },\r\n            components: {\r\n                calendar: true,\r\n                date: true,\r\n                month: true,\r\n                year: true,\r\n                decades: true,\r\n                clock: true,\r\n                hours: true,\r\n                minutes: true,\r\n                seconds: false,\r\n                useTwentyfourHour: false,\r\n            },\r\n            format: '',\r\n            inline: false,\r\n        },\r\n        stepping: 1,\r\n        useCurrent: true,\r\n        defaultDate: undefined,\r\n        localization: {\r\n            today: 'Go to today',\r\n            clear: 'Clear selection',\r\n            close: 'Close the picker',\r\n            selectMonth: 'Select Month',\r\n            previousMonth: 'Previous Month',\r\n            nextMonth: 'Next Month',\r\n            selectYear: 'Select Year',\r\n            previousYear: 'Previous Year',\r\n            nextYear: 'Next Year',\r\n            selectDecade: 'Select Decade',\r\n            previousDecade: 'Previous Decade',\r\n            nextDecade: 'Next Decade',\r\n            previousCentury: 'Previous Century',\r\n            nextCentury: 'Next Century',\r\n            pickHour: 'Pick Hour',\r\n            incrementHour: 'Increment Hour',\r\n            decrementHour: 'Decrement Hour',\r\n            pickMinute: 'Pick Minute',\r\n            incrementMinute: 'Increment Minute',\r\n            decrementMinute: 'Decrement Minute',\r\n            pickSecond: 'Pick Second',\r\n            incrementSecond: 'Increment Second',\r\n            decrementSecond: 'Decrement Second',\r\n            toggleMeridiem: 'Toggle Meridiem',\r\n            selectTime: 'Select Time',\r\n            selectDate: 'Select Date',\r\n            dayViewHeaderFormat: 'long',\r\n            locale: 'default',\r\n        },\r\n        keepInvalid: false,\r\n        debug: false,\r\n        allowInputToggle: false,\r\n        viewDate: new DateTime(),\r\n        multipleDates: false,\r\n        multipleDatesSeparator: '; ',\r\n        promptTimeOnDateChange: false,\r\n        promptTimeOnDateChangeTransitionDelay: 200,\r\n        hooks: {\r\n            inputParse: undefined,\r\n            inputFormat: undefined,\r\n        },\r\n    };\r\n    const DatePickerModes = [\r\n        {\r\n            name: 'calendar',\r\n            className: Namespace.css.daysContainer,\r\n            unit: Unit.month,\r\n            step: 1,\r\n        },\r\n        {\r\n            name: 'months',\r\n            className: Namespace.css.monthsContainer,\r\n            unit: Unit.year,\r\n            step: 1,\r\n        },\r\n        {\r\n            name: 'years',\r\n            className: Namespace.css.yearsContainer,\r\n            unit: Unit.year,\r\n            step: 10,\r\n        },\r\n        {\r\n            name: 'decades',\r\n            className: Namespace.css.decadesContainer,\r\n            unit: Unit.year,\r\n            step: 100,\r\n        },\r\n    ];\n\n    /**\r\n     * Provides a collapse functionality to the view changes\r\n     */\r\n    class Collapse {\r\n        constructor() {\r\n            /**\r\n             * Gets the transition duration from the `element` by getting css properties\r\n             * `transition-duration` and `transition-delay`\r\n             * @param element HTML Element\r\n             */\r\n            this.getTransitionDurationFromElement = (element) => {\r\n                if (!element) {\r\n                    return 0;\r\n                }\r\n                // Get transition-duration of the element\r\n                let { transitionDuration, transitionDelay } = window.getComputedStyle(element);\r\n                const floatTransitionDuration = Number.parseFloat(transitionDuration);\r\n                const floatTransitionDelay = Number.parseFloat(transitionDelay);\r\n                // Return 0 if element or transition duration is not found\r\n                if (!floatTransitionDuration && !floatTransitionDelay) {\r\n                    return 0;\r\n                }\r\n                // If multiple durations are defined, take the first\r\n                transitionDuration = transitionDuration.split(',')[0];\r\n                transitionDelay = transitionDelay.split(',')[0];\r\n                return ((Number.parseFloat(transitionDuration) +\r\n                    Number.parseFloat(transitionDelay)) *\r\n                    1000);\r\n            };\r\n        }\r\n        /**\r\n         * Flips the show/hide state of `target`\r\n         * @param target html element to affect.\r\n         */\r\n        toggle(target, callback = undefined) {\r\n            if (target.classList.contains(Namespace.css.show)) {\r\n                this.hide(target, callback);\r\n            }\r\n            else {\r\n                this.show(target, callback);\r\n            }\r\n        }\r\n        /**\r\n         * If `target` is not already showing, then show after the animation.\r\n         * @param target\r\n         */\r\n        show(target, callback = undefined) {\r\n            if (target.classList.contains(Namespace.css.collapsing) ||\r\n                target.classList.contains(Namespace.css.show))\r\n                return;\r\n            const complete = () => {\r\n                target.classList.remove(Namespace.css.collapsing);\r\n                target.classList.add(Namespace.css.collapse, Namespace.css.show);\r\n                target.style.height = '';\r\n                this.timeOut = null;\r\n                if (callback)\r\n                    callback();\r\n            };\r\n            target.style.height = '0';\r\n            target.classList.remove(Namespace.css.collapse);\r\n            target.classList.add(Namespace.css.collapsing);\r\n            this.timeOut = setTimeout(complete, this.getTransitionDurationFromElement(target));\r\n            target.style.height = `${target.scrollHeight}px`;\r\n        }\r\n        /**\r\n         * If `target` is not already hidden, then hide after the animation.\r\n         * @param target HTML Element\r\n         */\r\n        hide(target, callback = undefined) {\r\n            if (target.classList.contains(Namespace.css.collapsing) ||\r\n                !target.classList.contains(Namespace.css.show))\r\n                return;\r\n            const complete = () => {\r\n                target.classList.remove(Namespace.css.collapsing);\r\n                target.classList.add(Namespace.css.collapse);\r\n                this.timeOut = null;\r\n            };\r\n            target.style.height = `${target.getBoundingClientRect()['height']}px`;\r\n            const reflow = (element) => element.offsetHeight;\r\n            reflow(target);\r\n            target.classList.remove(Namespace.css.collapse, Namespace.css.show);\r\n            target.classList.add(Namespace.css.collapsing);\r\n            target.style.height = '';\r\n            this.timeOut = setTimeout(complete, this.getTransitionDurationFromElement(target));\r\n        }\r\n    }\n\n    /**\r\n     *\r\n     */\r\n    class Actions {\r\n        constructor(context) {\r\n            this._context = context;\r\n            this.collapse = new Collapse();\r\n        }\r\n        /**\r\n         * Performs the selected `action`. See ActionTypes\r\n         * @param e This is normally a click event\r\n         * @param action If not provided, then look for a [data-action]\r\n         */\r\n        do(e, action) {\r\n            var _a;\r\n            const currentTarget = e.currentTarget;\r\n            if (currentTarget.classList.contains(Namespace.css.disabled))\r\n                return false;\r\n            action = action || currentTarget.dataset.action;\r\n            const lastPicked = (this._context.dates.lastPicked || this._context._viewDate).clone;\r\n            /**\r\n             * Common function to manipulate {@link lastPicked} by `unit`\r\n             * @param unit\r\n             * @param value Value to change by\r\n             */\r\n            const manipulateAndSet = (unit, value = 1) => {\r\n                const newDate = lastPicked.manipulate(value, unit);\r\n                if (this._context._validation.isValid(newDate, unit)) {\r\n                    this._context.dates._setValue(newDate, this._context.dates.lastPickedIndex);\r\n                }\r\n            };\r\n            switch (action) {\r\n                case ActionTypes.next:\r\n                case ActionTypes.previous:\r\n                    const { unit, step } = DatePickerModes[this._context._currentViewMode];\r\n                    if (action === ActionTypes.next)\r\n                        this._context._viewDate.manipulate(step, unit);\r\n                    else\r\n                        this._context._viewDate.manipulate(step * -1, unit);\r\n                    this._context._viewUpdate(unit);\r\n                    this._context._display._showMode();\r\n                    break;\r\n                case ActionTypes.pickerSwitch:\r\n                    this._context._display._showMode(1);\r\n                    this._context._viewUpdate(DatePickerModes[this._context._currentViewMode].unit);\r\n                    this._context._display._updateCalendarHeader();\r\n                    break;\r\n                case ActionTypes.selectMonth:\r\n                case ActionTypes.selectYear:\r\n                case ActionTypes.selectDecade:\r\n                    const value = +currentTarget.dataset.value;\r\n                    switch (action) {\r\n                        case ActionTypes.selectMonth:\r\n                            this._context._viewDate.month = value;\r\n                            this._context._viewUpdate(Unit.month);\r\n                            break;\r\n                        case ActionTypes.selectYear:\r\n                            this._context._viewDate.year = value;\r\n                            this._context._viewUpdate(Unit.year);\r\n                            break;\r\n                        case ActionTypes.selectDecade:\r\n                            this._context._viewDate.year = value;\r\n                            this._context._viewUpdate(Unit.year);\r\n                            break;\r\n                    }\r\n                    if (this._context._currentViewMode === this._context._minViewModeNumber) {\r\n                        this._context.dates._setValue(this._context._viewDate, this._context.dates.lastPickedIndex);\r\n                        if (!this._context._options.display.inline) {\r\n                            this._context._display.hide();\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._context._display._showMode(-1);\r\n                    }\r\n                    break;\r\n                case ActionTypes.selectDay:\r\n                    const day = this._context._viewDate.clone;\r\n                    if (currentTarget.classList.contains(Namespace.css.old)) {\r\n                        day.manipulate(-1, Unit.month);\r\n                    }\r\n                    if (currentTarget.classList.contains(Namespace.css.new)) {\r\n                        day.manipulate(1, Unit.month);\r\n                    }\r\n                    day.date = +currentTarget.dataset.day;\r\n                    let index = 0;\r\n                    if (this._context._options.multipleDates) {\r\n                        index = this._context.dates.pickedIndex(day, Unit.date);\r\n                        if (index !== -1) {\r\n                            this._context.dates._setValue(null, index); //deselect multi-date\r\n                        }\r\n                        else {\r\n                            this._context.dates._setValue(day, this._context.dates.lastPickedIndex + 1);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._context.dates._setValue(day, this._context.dates.lastPickedIndex);\r\n                    }\r\n                    if (!this._context._display._hasTime &&\r\n                        !this._context._options.display.keepOpen &&\r\n                        !this._context._options.display.inline &&\r\n                        !this._context._options.multipleDates) {\r\n                        this._context._display.hide();\r\n                    }\r\n                    break;\r\n                case ActionTypes.selectHour:\r\n                    let hour = +currentTarget.dataset.value;\r\n                    if (lastPicked.hours >= 12 &&\r\n                        !this._context._options.display.components.useTwentyfourHour)\r\n                        hour += 12;\r\n                    lastPicked.hours = hour;\r\n                    this._context.dates._setValue(lastPicked, this._context.dates.lastPickedIndex);\r\n                    if (this._context._options.display.components.useTwentyfourHour &&\r\n                        !this._context._options.display.components.minutes &&\r\n                        !this._context._options.display.keepOpen &&\r\n                        !this._context._options.display.inline) {\r\n                        this._context._display.hide();\r\n                    }\r\n                    else {\r\n                        this.do(e, ActionTypes.showClock);\r\n                    }\r\n                    break;\r\n                case ActionTypes.selectMinute:\r\n                    lastPicked.minutes = +currentTarget.dataset.value;\r\n                    this._context.dates._setValue(lastPicked, this._context.dates.lastPickedIndex);\r\n                    if (this._context._options.display.components.useTwentyfourHour &&\r\n                        !this._context._options.display.components.seconds &&\r\n                        !this._context._options.display.keepOpen &&\r\n                        !this._context._options.display.inline) {\r\n                        this._context._display.hide();\r\n                    }\r\n                    else {\r\n                        this.do(e, ActionTypes.showClock);\r\n                    }\r\n                    break;\r\n                case ActionTypes.selectSecond:\r\n                    lastPicked.seconds = +currentTarget.dataset.value;\r\n                    this._context.dates._setValue(lastPicked, this._context.dates.lastPickedIndex);\r\n                    if (this._context._options.display.components.useTwentyfourHour &&\r\n                        !this._context._options.display.keepOpen &&\r\n                        !this._context._options.display.inline) {\r\n                        this._context._display.hide();\r\n                    }\r\n                    else {\r\n                        this.do(e, ActionTypes.showClock);\r\n                    }\r\n                    break;\r\n                case ActionTypes.incrementHours:\r\n                    manipulateAndSet(Unit.hours);\r\n                    break;\r\n                case ActionTypes.incrementMinutes:\r\n                    manipulateAndSet(Unit.minutes, this._context._options.stepping);\r\n                    break;\r\n                case ActionTypes.incrementSeconds:\r\n                    manipulateAndSet(Unit.seconds);\r\n                    break;\r\n                case ActionTypes.decrementHours:\r\n                    manipulateAndSet(Unit.hours, -1);\r\n                    break;\r\n                case ActionTypes.decrementMinutes:\r\n                    manipulateAndSet(Unit.minutes, this._context._options.stepping * -1);\r\n                    break;\r\n                case ActionTypes.decrementSeconds:\r\n                    manipulateAndSet(Unit.seconds, -1);\r\n                    break;\r\n                case ActionTypes.toggleMeridiem:\r\n                    manipulateAndSet(Unit.hours, ((_a = this._context.dates.lastPicked) === null || _a === void 0 ? void 0 : _a.hours) >= 12 ? -12 : 12 //***\r\n                    );\r\n                    break;\r\n                case ActionTypes.togglePicker:\r\n                    this._context._display.widget\r\n                        .querySelectorAll(`.${Namespace.css.dateContainer}, .${Namespace.css.timeContainer}`)\r\n                        .forEach((htmlElement) => this.collapse.toggle(htmlElement));\r\n                    if (currentTarget.getAttribute('title') ===\r\n                        this._context._options.localization.selectDate) {\r\n                        currentTarget.setAttribute('title', this._context._options.localization.selectTime);\r\n                        currentTarget.innerHTML = this._context._display._iconTag(this._context._options.display.icons.time).outerHTML;\r\n                        this._context._display._updateCalendarHeader();\r\n                    }\r\n                    else {\r\n                        currentTarget.setAttribute('title', this._context._options.localization.selectDate);\r\n                        currentTarget.innerHTML = this._context._display._iconTag(this._context._options.display.icons.date).outerHTML;\r\n                        this.do(e, ActionTypes.showClock);\r\n                        this._context._display._update('clock');\r\n                    }\r\n                    break;\r\n                case ActionTypes.showClock:\r\n                case ActionTypes.showHours:\r\n                case ActionTypes.showMinutes:\r\n                case ActionTypes.showSeconds:\r\n                    this._context._display.widget\r\n                        .querySelectorAll(`.${Namespace.css.timeContainer} > div`)\r\n                        .forEach((htmlElement) => (htmlElement.style.display = 'none'));\r\n                    let classToUse = '';\r\n                    switch (action) {\r\n                        case ActionTypes.showClock:\r\n                            classToUse = Namespace.css.clockContainer;\r\n                            this._context._display._update('clock');\r\n                            break;\r\n                        case ActionTypes.showHours:\r\n                            classToUse = Namespace.css.hourContainer;\r\n                            this._context._display._update(Unit.hours);\r\n                            break;\r\n                        case ActionTypes.showMinutes:\r\n                            classToUse = Namespace.css.minuteContainer;\r\n                            this._context._display._update(Unit.minutes);\r\n                            break;\r\n                        case ActionTypes.showSeconds:\r\n                            classToUse = Namespace.css.secondContainer;\r\n                            this._context._display._update(Unit.seconds);\r\n                            break;\r\n                    }\r\n                    (this._context._display.widget.getElementsByClassName(classToUse)[0]).style.display = 'grid';\r\n                    break;\r\n                case ActionTypes.clear:\r\n                    this._context.dates._setValue(null);\r\n                    this._context._display._updateCalendarHeader();\r\n                    break;\r\n                case ActionTypes.close:\r\n                    this._context._display.hide();\r\n                    break;\r\n                case ActionTypes.today:\r\n                    const today = new DateTime().setLocale(this._context._options.localization.locale);\r\n                    this._context._viewDate = today;\r\n                    if (this._context._validation.isValid(today, Unit.date))\r\n                        this._context.dates._setValue(today, this._context.dates.lastPickedIndex);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    var ActionTypes;\r\n    (function (ActionTypes) {\r\n        ActionTypes[\"next\"] = \"next\";\r\n        ActionTypes[\"previous\"] = \"previous\";\r\n        ActionTypes[\"pickerSwitch\"] = \"pickerSwitch\";\r\n        ActionTypes[\"selectMonth\"] = \"selectMonth\";\r\n        ActionTypes[\"selectYear\"] = \"selectYear\";\r\n        ActionTypes[\"selectDecade\"] = \"selectDecade\";\r\n        ActionTypes[\"selectDay\"] = \"selectDay\";\r\n        ActionTypes[\"selectHour\"] = \"selectHour\";\r\n        ActionTypes[\"selectMinute\"] = \"selectMinute\";\r\n        ActionTypes[\"selectSecond\"] = \"selectSecond\";\r\n        ActionTypes[\"incrementHours\"] = \"incrementHours\";\r\n        ActionTypes[\"incrementMinutes\"] = \"incrementMinutes\";\r\n        ActionTypes[\"incrementSeconds\"] = \"incrementSeconds\";\r\n        ActionTypes[\"decrementHours\"] = \"decrementHours\";\r\n        ActionTypes[\"decrementMinutes\"] = \"decrementMinutes\";\r\n        ActionTypes[\"decrementSeconds\"] = \"decrementSeconds\";\r\n        ActionTypes[\"toggleMeridiem\"] = \"toggleMeridiem\";\r\n        ActionTypes[\"togglePicker\"] = \"togglePicker\";\r\n        ActionTypes[\"showClock\"] = \"showClock\";\r\n        ActionTypes[\"showHours\"] = \"showHours\";\r\n        ActionTypes[\"showMinutes\"] = \"showMinutes\";\r\n        ActionTypes[\"showSeconds\"] = \"showSeconds\";\r\n        ActionTypes[\"clear\"] = \"clear\";\r\n        ActionTypes[\"close\"] = \"close\";\r\n        ActionTypes[\"today\"] = \"today\";\r\n    })(ActionTypes || (ActionTypes = {}));\n\n    /**\r\n     * Creates and updates the grid for `date`\r\n     */\r\n    class DateDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.daysContainer);\r\n            container.append(...this._daysOfTheWeek());\r\n            if (this._context._options.display.calendarWeeks) {\r\n                const div = document.createElement('div');\r\n                div.classList.add(Namespace.css.calendarWeeks, Namespace.css.noHighlight);\r\n                container.appendChild(div);\r\n            }\r\n            for (let i = 0; i < 42; i++) {\r\n                if (i !== 0 && i % 7 === 0) {\r\n                    if (this._context._options.display.calendarWeeks) {\r\n                        const div = document.createElement('div');\r\n                        div.classList.add(Namespace.css.calendarWeeks, Namespace.css.noHighlight);\r\n                        container.appendChild(div);\r\n                    }\r\n                }\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectDay);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.daysContainer)[0];\r\n            const [previous, switcher, next] = container.parentElement\r\n                .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                .getElementsByTagName('div');\r\n            switcher.setAttribute(Namespace.css.daysContainer, this._context._viewDate.format({\r\n                month: this._context._options.localization.dayViewHeaderFormat,\r\n            }));\r\n            this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.month), Unit.month)\r\n                ? previous.classList.remove(Namespace.css.disabled)\r\n                : previous.classList.add(Namespace.css.disabled);\r\n            this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.month), Unit.month)\r\n                ? next.classList.remove(Namespace.css.disabled)\r\n                : next.classList.add(Namespace.css.disabled);\r\n            let innerDate = this._context._viewDate.clone\r\n                .startOf(Unit.month)\r\n                .startOf('weekDay')\r\n                .manipulate(12, Unit.hours);\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectDay}\"], .${Namespace.css.calendarWeeks}`)\r\n                .forEach((containerClone, index) => {\r\n                if (this._context._options.display.calendarWeeks &&\r\n                    containerClone.classList.contains(Namespace.css.calendarWeeks)) {\r\n                    if (containerClone.innerText === '#')\r\n                        return;\r\n                    containerClone.innerText = `${innerDate.week}`;\r\n                    return;\r\n                }\r\n                let classes = [];\r\n                classes.push(Namespace.css.day);\r\n                if (innerDate.isBefore(this._context._viewDate, Unit.month)) {\r\n                    classes.push(Namespace.css.old);\r\n                }\r\n                if (innerDate.isAfter(this._context._viewDate, Unit.month)) {\r\n                    classes.push(Namespace.css.new);\r\n                }\r\n                if (!this._context._unset &&\r\n                    this._context.dates.isPicked(innerDate, Unit.date)) {\r\n                    classes.push(Namespace.css.active);\r\n                }\r\n                if (!this._context._validation.isValid(innerDate, Unit.date)) {\r\n                    classes.push(Namespace.css.disabled);\r\n                }\r\n                if (innerDate.isSame(new DateTime(), Unit.date)) {\r\n                    classes.push(Namespace.css.today);\r\n                }\r\n                if (innerDate.weekDay === 0 || innerDate.weekDay === 6) {\r\n                    classes.push(Namespace.css.weekend);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.year}-${innerDate.monthFormatted}-${innerDate.dateFormatted}`);\r\n                containerClone.setAttribute('data-day', `${innerDate.date}`);\r\n                containerClone.innerText = innerDate.format({ day: \"numeric\" });\r\n                innerDate.manipulate(1, Unit.date);\r\n            });\r\n        }\r\n        /***\r\n         * Generates an html row that contains the days of the week.\r\n         * @private\r\n         */\r\n        _daysOfTheWeek() {\r\n            let innerDate = this._context._viewDate.clone\r\n                .startOf('weekDay')\r\n                .startOf(Unit.date);\r\n            const row = [];\r\n            document.createElement('div');\r\n            if (this._context._options.display.calendarWeeks) {\r\n                const htmlDivElement = document.createElement('div');\r\n                htmlDivElement.classList.add(Namespace.css.calendarWeeks, Namespace.css.noHighlight);\r\n                htmlDivElement.innerText = '#';\r\n                row.push(htmlDivElement);\r\n            }\r\n            for (let i = 0; i < 7; i++) {\r\n                const htmlDivElement = document.createElement('div');\r\n                htmlDivElement.classList.add(Namespace.css.dayOfTheWeek, Namespace.css.noHighlight);\r\n                htmlDivElement.innerText = innerDate.format({ weekday: 'short' });\r\n                innerDate.manipulate(1, Unit.date);\r\n                row.push(htmlDivElement);\r\n            }\r\n            return row;\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `month`\r\n     */\r\n    class MonthDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.monthsContainer);\r\n            for (let i = 0; i < 12; i++) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectMonth);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.monthsContainer)[0];\r\n            const [previous, switcher, next] = container.parentElement\r\n                .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                .getElementsByTagName('div');\r\n            switcher.setAttribute(Namespace.css.monthsContainer, this._context._viewDate.format({ year: 'numeric' }));\r\n            this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.year), Unit.year)\r\n                ? previous.classList.remove(Namespace.css.disabled)\r\n                : previous.classList.add(Namespace.css.disabled);\r\n            this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.year), Unit.year)\r\n                ? next.classList.remove(Namespace.css.disabled)\r\n                : next.classList.add(Namespace.css.disabled);\r\n            let innerDate = this._context._viewDate.clone.startOf(Unit.year);\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectMonth}\"]`)\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.css.month);\r\n                if (!this._context._unset &&\r\n                    this._context.dates.isPicked(innerDate, Unit.month)) {\r\n                    classes.push(Namespace.css.active);\r\n                }\r\n                if (!this._context._validation.isValid(innerDate, Unit.month)) {\r\n                    classes.push(Namespace.css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${index}`);\r\n                containerClone.innerText = `${innerDate.format({ month: 'short' })}`;\r\n                innerDate.manipulate(1, Unit.month);\r\n            });\r\n        }\r\n    }\n\n    class OptionConverter {\r\n        static _mergeOptions(providedOptions, mergeTo) {\r\n            const newOptions = {};\r\n            let path = '';\r\n            const ignoreProperties = ['inputParse', 'inputFormat'];\r\n            const processKey = (key, value, providedType, defaultType) => {\r\n                switch (key) {\r\n                    case 'defaultDate': {\r\n                        const dateTime = this._dateConversion(value, 'defaultDate');\r\n                        if (dateTime !== undefined) {\r\n                            return dateTime;\r\n                        }\r\n                        Namespace.errorMessages.typeMismatch('defaultDate', providedType, 'DateTime or Date');\r\n                    }\r\n                    case 'viewDate': {\r\n                        const dateTime = this._dateConversion(value, 'viewDate');\r\n                        if (dateTime !== undefined) {\r\n                            return dateTime;\r\n                        }\r\n                        Namespace.errorMessages.typeMismatch('viewDate', providedType, 'DateTime or Date');\r\n                    }\r\n                    case 'minDate': {\r\n                        if (value === undefined) {\r\n                            return value;\r\n                        }\r\n                        const dateTime = this._dateConversion(value, 'restrictions.minDate');\r\n                        if (dateTime !== undefined) {\r\n                            return dateTime;\r\n                        }\r\n                        Namespace.errorMessages.typeMismatch('restrictions.minDate', providedType, 'DateTime or Date');\r\n                    }\r\n                    case 'maxDate': {\r\n                        if (value === undefined) {\r\n                            return value;\r\n                        }\r\n                        const dateTime = this._dateConversion(value, 'restrictions.maxDate');\r\n                        if (dateTime !== undefined) {\r\n                            return dateTime;\r\n                        }\r\n                        Namespace.errorMessages.typeMismatch('restrictions.maxDate', providedType, 'DateTime or Date');\r\n                    }\r\n                    case 'disabledHours':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckNumberArray('restrictions.disabledHours', value, providedType);\r\n                        if (value.filter((x) => x < 0 || x > 24).length > 0)\r\n                            Namespace.errorMessages.numbersOutOfRage('restrictions.disabledHours', 0, 23);\r\n                        return value;\r\n                    case 'enabledHours':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckNumberArray('restrictions.enabledHours', value, providedType);\r\n                        if (value.filter((x) => x < 0 || x > 24).length > 0)\r\n                            Namespace.errorMessages.numbersOutOfRage('restrictions.enabledHours', 0, 23);\r\n                        return value;\r\n                    case 'daysOfWeekDisabled':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckNumberArray('restrictions.daysOfWeekDisabled', value, providedType);\r\n                        if (value.filter((x) => x < 0 || x > 6).length > 0)\r\n                            Namespace.errorMessages.numbersOutOfRage('restrictions.daysOfWeekDisabled', 0, 6);\r\n                        return value;\r\n                    case 'enabledDates':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckDateArray('restrictions.enabledDates', value, providedType);\r\n                        return value;\r\n                    case 'disabledDates':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckDateArray('restrictions.disabledDates', value, providedType);\r\n                        return value;\r\n                    case 'disabledTimeIntervals':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        if (!Array.isArray(value)) {\r\n                            Namespace.errorMessages.typeMismatch(key, providedType, 'array of { from: DateTime|Date, to: DateTime|Date }');\r\n                        }\r\n                        const valueObject = value;\r\n                        for (let i = 0; i < valueObject.length; i++) {\r\n                            Object.keys(valueObject[i]).forEach((vk) => {\r\n                                const subOptionName = `${key}[${i}].${vk}`;\r\n                                let d = valueObject[i][vk];\r\n                                const dateTime = this._dateConversion(d, subOptionName);\r\n                                if (!dateTime) {\r\n                                    Namespace.errorMessages.typeMismatch(subOptionName, typeof d, 'DateTime or Date');\r\n                                }\r\n                                valueObject[i][vk] = dateTime;\r\n                            });\r\n                        }\r\n                        return valueObject;\r\n                    case 'toolbarPlacement':\r\n                    case 'type':\r\n                    case 'viewMode':\r\n                    case 'dayViewHeaderFormat':\r\n                        const optionValues = {\r\n                            toolbarPlacement: ['top', 'bottom', 'default'],\r\n                            type: ['icons', 'sprites'],\r\n                            viewMode: ['clock', 'calendar', 'months', 'years', 'decades'],\r\n                            dayViewHeaderFormat: [\r\n                                'numeric',\r\n                                '2-digit',\r\n                                'long',\r\n                                'short',\r\n                                'narrow',\r\n                            ],\r\n                        };\r\n                        const keyOptions = optionValues[key];\r\n                        if (!keyOptions.includes(value))\r\n                            Namespace.errorMessages.unexpectedOptionValue(path.substring(1), value, keyOptions);\r\n                        return value;\r\n                    case 'inputParse':\r\n                    case 'inputFormat':\r\n                        return value;\r\n                    default:\r\n                        switch (defaultType) {\r\n                            case 'boolean':\r\n                                return value === 'true' || value === true;\r\n                            case 'number':\r\n                                return +value;\r\n                            case 'string':\r\n                                return value.toString();\r\n                            case 'object':\r\n                                return {};\r\n                            case 'function':\r\n                                return value;\r\n                            default:\r\n                                Namespace.errorMessages.typeMismatch(path.substring(1), providedType, defaultType);\r\n                        }\r\n                }\r\n            };\r\n            /**\r\n             * The spread operator caused sub keys to be missing after merging.\r\n             * This is to fix that issue by using spread on the child objects first.\r\n             * Also handles complex options like disabledDates\r\n             * @param provided An option from new providedOptions\r\n             * @param mergeOption Default option to compare types against\r\n             * @param copyTo Destination object. This was add to prevent reference copies\r\n             */\r\n            const spread = (provided, mergeOption, copyTo) => {\r\n                const unsupportedOptions = Object.keys(provided).filter((x) => !Object.keys(mergeOption).includes(x));\r\n                if (unsupportedOptions.length > 0) {\r\n                    const flattenedOptions = OptionConverter._flattenDefaultOptions;\r\n                    const errors = unsupportedOptions.map((x) => {\r\n                        let error = `\"${path.substring(1)}.${x}\" in not a known option.`;\r\n                        let didYouMean = flattenedOptions.find((y) => y.includes(x));\r\n                        if (didYouMean)\r\n                            error += `Did you mean \"${didYouMean}\"?`;\r\n                        return error;\r\n                    });\r\n                    Namespace.errorMessages.unexpectedOptions(errors);\r\n                }\r\n                Object.keys(mergeOption).forEach((key) => {\r\n                    const defaultOptionValue = mergeOption[key];\r\n                    let providedType = typeof provided[key];\r\n                    let defaultType = typeof defaultOptionValue;\r\n                    let value = provided[key];\r\n                    if (!provided.hasOwnProperty(key)) {\r\n                        if (defaultType === 'undefined' ||\r\n                            ((value === null || value === void 0 ? void 0 : value.length) === 0 && Array.isArray(defaultOptionValue))) {\r\n                            copyTo[key] = defaultOptionValue;\r\n                            return;\r\n                        }\r\n                        provided[key] = defaultOptionValue;\r\n                        value = provided[key];\r\n                    }\r\n                    path += `.${key}`;\r\n                    copyTo[key] = processKey(key, value, providedType, defaultType);\r\n                    if (typeof defaultOptionValue !== 'object' ||\r\n                        ignoreProperties.includes(key)) {\r\n                        path = path.substring(0, path.lastIndexOf(`.${key}`));\r\n                        return;\r\n                    }\r\n                    if (!Array.isArray(provided[key])) {\r\n                        spread(provided[key], defaultOptionValue, copyTo[key]);\r\n                        path = path.substring(0, path.lastIndexOf(`.${key}`));\r\n                    }\r\n                    path = path.substring(0, path.lastIndexOf(`.${key}`));\r\n                });\r\n            };\r\n            spread(providedOptions, mergeTo, newOptions);\r\n            return newOptions;\r\n        }\r\n        static _dataToOptions(element, options) {\r\n            const eData = element.dataset;\r\n            if (!eData ||\r\n                Object.keys(eData).length === 0 ||\r\n                eData.constructor !== DOMStringMap)\r\n                return options;\r\n            let dataOptions = {};\r\n            // because dataset returns camelCase including the 'td' key the option\r\n            // key won't align\r\n            const objectToNormalized = (object) => {\r\n                const lowered = {};\r\n                Object.keys(object).forEach((x) => {\r\n                    lowered[x.toLowerCase()] = x;\r\n                });\r\n                return lowered;\r\n            };\r\n            const rabbitHole = (split, index, optionSubgroup, value) => {\r\n                // first round = display { ... }\r\n                const normalizedOptions = objectToNormalized(optionSubgroup);\r\n                const keyOption = normalizedOptions[split[index].toLowerCase()];\r\n                const internalObject = {};\r\n                if (keyOption === undefined)\r\n                    return internalObject;\r\n                // if this is another object, continue down the rabbit hole\r\n                if (optionSubgroup[keyOption].constructor === Object) {\r\n                    index++;\r\n                    internalObject[keyOption] = rabbitHole(split, index, optionSubgroup[keyOption], value);\r\n                }\r\n                else {\r\n                    internalObject[keyOption] = value;\r\n                }\r\n                return internalObject;\r\n            };\r\n            const optionsLower = objectToNormalized(options);\r\n            Object.keys(eData)\r\n                .filter((x) => x.startsWith(Namespace.dataKey))\r\n                .map((x) => x.substring(2))\r\n                .forEach((key) => {\r\n                let keyOption = optionsLower[key.toLowerCase()];\r\n                // dataset merges dashes to camelCase... yay\r\n                // i.e. key = display_components_seconds\r\n                if (key.includes('_')) {\r\n                    // [display, components, seconds]\r\n                    const split = key.split('_');\r\n                    // display\r\n                    keyOption = optionsLower[split[0].toLowerCase()];\r\n                    if (keyOption !== undefined &&\r\n                        options[keyOption].constructor === Object) {\r\n                        dataOptions[keyOption] = rabbitHole(split, 1, options[keyOption], eData[`td${key}`]);\r\n                    }\r\n                }\r\n                // or key = multipleDate\r\n                else if (keyOption !== undefined) {\r\n                    dataOptions[keyOption] = eData[`td${key}`];\r\n                }\r\n            });\r\n            return this._mergeOptions(dataOptions, options);\r\n        }\r\n        /**\r\n         * Attempts to prove `d` is a DateTime or Date or can be converted into one.\r\n         * @param d If a string will attempt creating a date from it.\r\n         * @private\r\n         */\r\n        static _dateTypeCheck(d) {\r\n            if (d.constructor.name === DateTime.name)\r\n                return d;\r\n            if (d.constructor.name === Date.name) {\r\n                return DateTime.convert(d);\r\n            }\r\n            if (typeof d === typeof '') {\r\n                const dateTime = new DateTime(d);\r\n                if (JSON.stringify(dateTime) === 'null') {\r\n                    return null;\r\n                }\r\n                return dateTime;\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * Type checks that `value` is an array of Date or DateTime\r\n         * @param optionName Provides text to error messages e.g. disabledDates\r\n         * @param value Option value\r\n         * @param providedType Used to provide text to error messages\r\n         */\r\n        static _typeCheckDateArray(optionName, value, providedType) {\r\n            if (!Array.isArray(value)) {\r\n                Namespace.errorMessages.typeMismatch(optionName, providedType, 'array of DateTime or Date');\r\n            }\r\n            for (let i = 0; i < value.length; i++) {\r\n                let d = value[i];\r\n                const dateTime = this._dateConversion(d, optionName);\r\n                if (!dateTime) {\r\n                    Namespace.errorMessages.typeMismatch(optionName, typeof d, 'DateTime or Date');\r\n                }\r\n                value[i] = dateTime;\r\n            }\r\n        }\r\n        /**\r\n         * Type checks that `value` is an array of numbers\r\n         * @param optionName Provides text to error messages e.g. disabledDates\r\n         * @param value Option value\r\n         * @param providedType Used to provide text to error messages\r\n         */\r\n        static _typeCheckNumberArray(optionName, value, providedType) {\r\n            if (!Array.isArray(value) || value.length && value.find((x) => typeof x !== typeof 0)) { //***\r\n                Namespace.errorMessages.typeMismatch(optionName, providedType, 'array of numbers');\r\n            }\r\n            return;\r\n        }\r\n        /**\r\n         * Attempts to convert `d` to a DateTime object\r\n         * @param d value to convert\r\n         * @param optionName Provides text to error messages e.g. disabledDates\r\n         */\r\n        static _dateConversion(d, optionName) {\r\n            if (typeof d === typeof '' && optionName !== 'input') {\r\n                Namespace.errorMessages.dateString();\r\n            }\r\n            const converted = this._dateTypeCheck(d);\r\n            if (d && !converted) {\r\n                Namespace.errorMessages.failedToParseDate(optionName, d, optionName === 'input');\r\n            }\r\n            return converted;\r\n        }\r\n        static get _flattenDefaultOptions() {\r\n            if (this._flatback)\r\n                return this._flatback;\r\n            const deepKeys = (t, pre = []) => Array.isArray(t)\r\n                ? []\r\n                : Object(t) === t\r\n                    ? Object.entries(t).flatMap(([k, v]) => deepKeys(v, [...pre, k]))\r\n                    : pre.join('.');\r\n            this._flatback = deepKeys(DefaultOptions);\r\n            return this._flatback;\r\n        }\r\n        /**\r\n         * Some options conflict like min/max date. Verify that these kinds of options\r\n         * are set correctly.\r\n         * @param config\r\n         */\r\n        static _validateConflcits(config) {\r\n            if (config.restrictions.minDate && config.restrictions.maxDate) {\r\n                if (config.restrictions.minDate.isAfter(config.restrictions.maxDate)) {\r\n                    Namespace.errorMessages.conflictingConfiguration('minDate is after maxDate');\r\n                }\r\n                if (config.restrictions.maxDate.isBefore(config.restrictions.minDate)) {\r\n                    Namespace.errorMessages.conflictingConfiguration('maxDate is before minDate');\r\n                }\r\n            }\r\n        }\r\n    }\n\n    class Dates {\r\n        constructor(context) {\r\n            this._dates = [];\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Returns the array of selected dates\r\n         */\r\n        get picked() {\r\n            return this._dates;\r\n        }\r\n        /**\r\n         * Returns the last picked value.\r\n         */\r\n        get lastPicked() {\r\n            return this._dates[this.lastPickedIndex];\r\n        }\r\n        /**\r\n         * Returns the length of picked dates -1 or 0 if none are selected.\r\n         */\r\n        get lastPickedIndex() {\r\n            if (this._dates.length === 0)\r\n                return 0;\r\n            return this._dates.length - 1;\r\n        }\r\n        /**\r\n         * Adds a new DateTime to selected dates array\r\n         * @param date\r\n         */\r\n        add(date) {\r\n            this._dates.push(date);\r\n        }\r\n        /**\r\n         * Tries to convert the provided value to a DateTime object.\r\n         * If value is null|undefined then clear the value of the provided index (or 0).\r\n         * @param value Value to convert or null|undefined\r\n         * @param index When using multidates this is the index in the array\r\n         * @param from Used in the warning message, useful for debugging.\r\n         */\r\n        set(value, index, from = 'date.set') {\r\n            if (!value)\r\n                this._setValue(value, index);\r\n            const converted = OptionConverter._dateConversion(value, from);\r\n            if (converted)\r\n                this._setValue(converted, index);\r\n        }\r\n        /**\r\n         * Returns true if the `targetDate` is part of the selected dates array.\r\n         * If `unit` is provided then a granularity to that unit will be used.\r\n         * @param targetDate\r\n         * @param unit\r\n         */\r\n        isPicked(targetDate, unit) {\r\n            if (!unit)\r\n                return this._dates.find((x) => x === targetDate) !== undefined;\r\n            const format = Dates.getFormatByUnit(unit);\r\n            let innerDateFormatted = targetDate.format(format);\r\n            return (this._dates\r\n                .map((x) => x.format(format))\r\n                .find((x) => x === innerDateFormatted) !== undefined);\r\n        }\r\n        /**\r\n         * Returns the index at which `targetDate` is in the array.\r\n         * This is used for updating or removing a date when multi-date is used\r\n         * If `unit` is provided then a granularity to that unit will be used.\r\n         * @param targetDate\r\n         * @param unit\r\n         */\r\n        pickedIndex(targetDate, unit) {\r\n            if (!unit)\r\n                return this._dates.indexOf(targetDate);\r\n            const format = Dates.getFormatByUnit(unit);\r\n            let innerDateFormatted = targetDate.format(format);\r\n            return this._dates.map((x) => x.format(format)).indexOf(innerDateFormatted);\r\n        }\r\n        /**\r\n         * Clears all selected dates.\r\n         */\r\n        clear() {\r\n            this._context._unset = true;\r\n            this._context._triggerEvent({\r\n                type: Namespace.events.change,\r\n                date: undefined,\r\n                oldDate: this.lastPicked,\r\n                isClear: true,\r\n                isValid: true,\r\n            });\r\n            this._dates = [];\r\n        }\r\n        /**\r\n         * Find the \"book end\" years given a `year` and a `factor`\r\n         * @param factor e.g. 100 for decades\r\n         * @param year e.g. 2021\r\n         */\r\n        static getStartEndYear(factor, year) {\r\n            const step = factor / 10, startYear = Math.floor(year / factor) * factor, endYear = startYear + step * 9, focusValue = Math.floor(year / step) * step;\r\n            return [startYear, endYear, focusValue];\r\n        }\r\n        /**\r\n         * Do not use direectly. Attempts to either clear or set the `target` date at `index`.\r\n         * If the `target` is null then the date will be cleared.\r\n         * If multi-date is being used then it will be removed from the array.\r\n         * If `target` is valid and multi-date is used then if `index` is\r\n         * provided the date at that index will be replaced, otherwise it is appended.\r\n         * @param target\r\n         * @param index\r\n         */\r\n        _setValue(target, index) {\r\n            const noIndex = typeof index === 'undefined', isClear = !target && noIndex;\r\n            let oldDate = this._context._unset ? null : this._dates[index];\r\n            if (!oldDate && !this._context._unset && noIndex && isClear) {\r\n                oldDate = this.lastPicked;\r\n            }\r\n            const updateInput = () => {\r\n                if (!this._context._input)\r\n                    return;\r\n                let newValue = this._context._options.hooks.inputFormat(this._context, target);\r\n                if (this._context._options.multipleDates) {\r\n                    newValue = this._dates\r\n                        .map((d) => this._context._options.hooks.inputFormat(this._context, d))\r\n                        .join(this._context._options.multipleDatesSeparator);\r\n                }\r\n                if (this._context._input.value != newValue)\r\n                    this._context._input.value = newValue;\r\n            };\r\n            if (target && (oldDate === null || oldDate === void 0 ? void 0 : oldDate.isSame(target))) {\r\n                updateInput();\r\n                return;\r\n            }\r\n            // case of calling setValue(null)\r\n            if (!target) {\r\n                if (!this._context._options.multipleDates ||\r\n                    this._dates.length === 1 ||\r\n                    isClear) {\r\n                    this._context._unset = true;\r\n                    this._dates = [];\r\n                }\r\n                else {\r\n                    this._dates.splice(index, 1);\r\n                }\r\n                this._context._triggerEvent({\r\n                    type: Namespace.events.change,\r\n                    date: undefined,\r\n                    oldDate,\r\n                    isClear,\r\n                    isValid: true,\r\n                });\r\n                updateInput();\r\n                this._context._display._update('all');\r\n                return;\r\n            }\r\n            index = index || 0;\r\n            target = target.clone;\r\n            // minute stepping is being used, force the minute to the closest value\r\n            if (this._context._options.stepping !== 1) {\r\n                target.minutes =\r\n                    Math.round(target.minutes / this._context._options.stepping) *\r\n                        this._context._options.stepping;\r\n                target.seconds = 0;\r\n            }\r\n            if (this._context._validation.isValid(target)) {\r\n                this._dates[index] = target;\r\n                this._context._viewDate = target.clone;\r\n                updateInput();\r\n                this._context._unset = false;\r\n                this._context._display._update('all');\r\n                this._context._triggerEvent({\r\n                    type: Namespace.events.change,\r\n                    date: target,\r\n                    oldDate,\r\n                    isClear,\r\n                    isValid: true,\r\n                });\r\n                return;\r\n            }\r\n            if (this._context._options.keepInvalid) {\r\n                this._dates[index] = target;\r\n                this._context._viewDate = target.clone;\r\n                updateInput();\r\n                this._context._triggerEvent({\r\n                    type: Namespace.events.change,\r\n                    date: target,\r\n                    oldDate,\r\n                    isClear,\r\n                    isValid: false,\r\n                });\r\n            }\r\n            this._context._triggerEvent({\r\n                type: Namespace.events.error,\r\n                reason: Namespace.errorMessages.failedToSetInvalidDate,\r\n                date: target,\r\n                oldDate,\r\n            });\r\n        }\r\n        /**\r\n         * Returns a format object based on the granularity of `unit`\r\n         * @param unit\r\n         */\r\n        static getFormatByUnit(unit) {\r\n            switch (unit) {\r\n                case 'date':\r\n                    return { dateStyle: 'short' };\r\n                case 'month':\r\n                    return {\r\n                        month: 'numeric',\r\n                        year: 'numeric',\r\n                    };\r\n                case 'year':\r\n                    return { year: 'numeric' };\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `year`\r\n     */\r\n    class YearDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.yearsContainer);\r\n            for (let i = 0; i < 12; i++) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectYear);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            Dates.getStartEndYear(10, this._context._viewDate.year);\r\n            this._startYear = this._context._viewDate.clone.manipulate(-1, Unit.year);\r\n            this._endYear = this._context._viewDate.clone.manipulate(10, Unit.year);\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.yearsContainer)[0];\r\n            const [previous, switcher, next] = container.parentElement\r\n                .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                .getElementsByTagName('div');\r\n            switcher.setAttribute(Namespace.css.yearsContainer, `${this._startYear.format({ year: 'numeric' })}-${this._endYear.format({ year: 'numeric' })}`);\r\n            this._context._validation.isValid(this._startYear, Unit.year)\r\n                ? previous.classList.remove(Namespace.css.disabled)\r\n                : previous.classList.add(Namespace.css.disabled);\r\n            this._context._validation.isValid(this._endYear, Unit.year)\r\n                ? next.classList.remove(Namespace.css.disabled)\r\n                : next.classList.add(Namespace.css.disabled);\r\n            let innerDate = this._context._viewDate.clone\r\n                .startOf(Unit.year)\r\n                .manipulate(-1, Unit.year);\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectYear}\"]`)\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.css.year);\r\n                if (!this._context._unset &&\r\n                    this._context.dates.isPicked(innerDate, Unit.year)) {\r\n                    classes.push(Namespace.css.active);\r\n                }\r\n                if (!this._context._validation.isValid(innerDate, Unit.year)) {\r\n                    classes.push(Namespace.css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.year}`);\r\n                containerClone.innerText = innerDate.format({ year: \"numeric\" });\r\n                innerDate.manipulate(1, Unit.year);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `seconds`\r\n     */\r\n    class DecadeDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.decadesContainer);\r\n            for (let i = 0; i < 12; i++) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectDecade);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const [start, end] = Dates.getStartEndYear(100, this._context._viewDate.year);\r\n            this._startDecade = this._context._viewDate.clone.startOf(Unit.year);\r\n            this._startDecade.year = start;\r\n            this._endDecade = this._context._viewDate.clone.startOf(Unit.year);\r\n            this._endDecade.year = end;\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.decadesContainer)[0];\r\n            const [previous, switcher, next] = container.parentElement\r\n                .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                .getElementsByTagName('div');\r\n            switcher.setAttribute(Namespace.css.decadesContainer, `${this._startDecade.format({ year: 'numeric' })}-${this._endDecade.format({ year: 'numeric' })}`);\r\n            this._context._validation.isValid(this._startDecade, Unit.year)\r\n                ? previous.classList.remove(Namespace.css.disabled)\r\n                : previous.classList.add(Namespace.css.disabled);\r\n            this._context._validation.isValid(this._endDecade, Unit.year)\r\n                ? next.classList.remove(Namespace.css.disabled)\r\n                : next.classList.add(Namespace.css.disabled);\r\n            const pickedYears = this._context.dates.picked.map((x) => x.year);\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectDecade}\"]`)\r\n                .forEach((containerClone, index) => {\r\n                if (index === 0) {\r\n                    containerClone.classList.add(Namespace.css.old);\r\n                    if (this._startDecade.year - 10 < 0) {\r\n                        containerClone.textContent = ' ';\r\n                        previous.classList.add(Namespace.css.disabled);\r\n                        containerClone.classList.add(Namespace.css.disabled);\r\n                        containerClone.setAttribute('data-value', ``);\r\n                        return;\r\n                    }\r\n                    else {\r\n                        containerClone.innerText = this._startDecade.clone.manipulate(-10, Unit.year).format({ year: 'numeric' });\r\n                        containerClone.setAttribute('data-value', `${this._startDecade.year}`);\r\n                        return;\r\n                    }\r\n                }\r\n                let classes = [];\r\n                classes.push(Namespace.css.decade);\r\n                const startDecadeYear = this._startDecade.year;\r\n                const endDecadeYear = this._startDecade.year + 9;\r\n                if (!this._context._unset &&\r\n                    pickedYears.filter((x) => x >= startDecadeYear && x <= endDecadeYear)\r\n                        .length > 0) {\r\n                    classes.push(Namespace.css.active);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${this._startDecade.year}`);\r\n                containerClone.innerText = `${this._startDecade.format({ year: 'numeric' })}`;\r\n                this._startDecade.manipulate(10, Unit.year);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Creates the clock display\r\n     */\r\n    class TimeDisplay {\r\n        constructor(context) {\r\n            this._gridColumns = '';\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the clock display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.clockContainer);\r\n            container.append(...this._grid());\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the various elements with in the clock display\r\n         * like the current hour and if the manipulation icons are enabled.\r\n         * @private\r\n         */\r\n        _update() {\r\n            const timesDiv = (this._context._display.widget.getElementsByClassName(Namespace.css.clockContainer)[0]);\r\n            const lastPicked = (this._context.dates.lastPicked || this._context._viewDate).clone;\r\n            timesDiv\r\n                .querySelectorAll('.disabled')\r\n                .forEach((element) => element.classList.remove(Namespace.css.disabled));\r\n            if (this._context._options.display.components.hours) {\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.hours), Unit.hours)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.incrementHours}]`)\r\n                        .classList.add(Namespace.css.disabled);\r\n                }\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.hours), Unit.hours)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.decrementHours}]`)\r\n                        .classList.add(Namespace.css.disabled);\r\n                }\r\n                timesDiv.querySelector(`[data-time-component=${Unit.hours}]`).innerText = this._context._options.display.components.useTwentyfourHour\r\n                    ? lastPicked.hoursFormatted\r\n                    : lastPicked.twelveHoursFormatted;\r\n            }\r\n            if (this._context._options.display.components.minutes) {\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.minutes), Unit.minutes)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.incrementMinutes}]`)\r\n                        .classList.add(Namespace.css.disabled);\r\n                }\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.minutes), Unit.minutes)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.decrementMinutes}]`)\r\n                        .classList.add(Namespace.css.disabled);\r\n                }\r\n                timesDiv.querySelector(`[data-time-component=${Unit.minutes}]`).innerText = lastPicked.minutesFormatted;\r\n            }\r\n            if (this._context._options.display.components.seconds) {\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.seconds), Unit.seconds)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.incrementSeconds}]`)\r\n                        .classList.add(Namespace.css.disabled);\r\n                }\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.seconds), Unit.seconds)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.decrementSeconds}]`)\r\n                        .classList.add(Namespace.css.disabled);\r\n                }\r\n                timesDiv.querySelector(`[data-time-component=${Unit.seconds}]`).innerText = lastPicked.secondsFormatted;\r\n            }\r\n            if (!this._context._options.display.components.useTwentyfourHour) {\r\n                const toggle = timesDiv.querySelector(`[data-action=${ActionTypes.toggleMeridiem}]`);\r\n                toggle.innerText = lastPicked.meridiem();\r\n                if (!this._context._validation.isValid(lastPicked.clone.manipulate(lastPicked.hours >= 12 ? -12 : 12, Unit.hours))) {\r\n                    toggle.classList.add(Namespace.css.disabled);\r\n                }\r\n                else {\r\n                    toggle.classList.remove(Namespace.css.disabled);\r\n                }\r\n            }\r\n            timesDiv.style.gridTemplateAreas = `\"${this._gridColumns}\"`;\r\n        }\r\n        /**\r\n         * Creates the table for the clock display depending on what options are selected.\r\n         * @private\r\n         */\r\n        _grid() {\r\n            this._gridColumns = '';\r\n            const top = [], middle = [], bottom = [], separator = document.createElement('div'), upIcon = this._context._display._iconTag(this._context._options.display.icons.up), downIcon = this._context._display._iconTag(this._context._options.display.icons.down);\r\n            separator.classList.add(Namespace.css.separator, Namespace.css.noHighlight);\r\n            const separatorColon = separator.cloneNode(true);\r\n            separatorColon.innerHTML = ':';\r\n            const getSeparator = (colon = false) => {\r\n                return colon\r\n                    ? separatorColon.cloneNode(true)\r\n                    : separator.cloneNode(true);\r\n            };\r\n            if (this._context._options.display.components.hours) {\r\n                let divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.incrementHour);\r\n                divElement.setAttribute('data-action', ActionTypes.incrementHours);\r\n                divElement.appendChild(upIcon.cloneNode(true));\r\n                top.push(divElement);\r\n                divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.pickHour);\r\n                divElement.setAttribute('data-action', ActionTypes.showHours);\r\n                divElement.setAttribute('data-time-component', Unit.hours);\r\n                middle.push(divElement);\r\n                divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.decrementHour);\r\n                divElement.setAttribute('data-action', ActionTypes.decrementHours);\r\n                divElement.appendChild(downIcon.cloneNode(true));\r\n                bottom.push(divElement);\r\n                this._gridColumns += 'a';\r\n            }\r\n            if (this._context._options.display.components.minutes) {\r\n                this._gridColumns += ' a';\r\n                if (this._context._options.display.components.hours) {\r\n                    top.push(getSeparator());\r\n                    middle.push(getSeparator(true));\r\n                    bottom.push(getSeparator());\r\n                    this._gridColumns += ' a';\r\n                }\r\n                let divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.incrementMinute);\r\n                divElement.setAttribute('data-action', ActionTypes.incrementMinutes);\r\n                divElement.appendChild(upIcon.cloneNode(true));\r\n                top.push(divElement);\r\n                divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.pickMinute);\r\n                divElement.setAttribute('data-action', ActionTypes.showMinutes);\r\n                divElement.setAttribute('data-time-component', Unit.minutes);\r\n                middle.push(divElement);\r\n                divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.decrementMinute);\r\n                divElement.setAttribute('data-action', ActionTypes.decrementMinutes);\r\n                divElement.appendChild(downIcon.cloneNode(true));\r\n                bottom.push(divElement);\r\n            }\r\n            if (this._context._options.display.components.seconds) {\r\n                this._gridColumns += ' a';\r\n                if (this._context._options.display.components.minutes) {\r\n                    top.push(getSeparator());\r\n                    middle.push(getSeparator(true));\r\n                    bottom.push(getSeparator());\r\n                    this._gridColumns += ' a';\r\n                }\r\n                let divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.incrementSecond);\r\n                divElement.setAttribute('data-action', ActionTypes.incrementSeconds);\r\n                divElement.appendChild(upIcon.cloneNode(true));\r\n                top.push(divElement);\r\n                divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.pickSecond);\r\n                divElement.setAttribute('data-action', ActionTypes.showSeconds);\r\n                divElement.setAttribute('data-time-component', Unit.seconds);\r\n                middle.push(divElement);\r\n                divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.decrementSecond);\r\n                divElement.setAttribute('data-action', ActionTypes.decrementSeconds);\r\n                divElement.appendChild(downIcon.cloneNode(true));\r\n                bottom.push(divElement);\r\n            }\r\n            if (!this._context._options.display.components.useTwentyfourHour) {\r\n                this._gridColumns += ' a';\r\n                let divElement = getSeparator();\r\n                top.push(divElement);\r\n                let button = document.createElement('button');\r\n                button.setAttribute('title', this._context._options.localization.toggleMeridiem);\r\n                button.setAttribute('data-action', ActionTypes.toggleMeridiem);\r\n                button.setAttribute('tabindex', '-1');\r\n                button.classList.add('btn', 'btn-primary'); //***\r\n                divElement = document.createElement('div');\r\n                divElement.classList.add(Namespace.css.noHighlight);\r\n                divElement.appendChild(button);\r\n                middle.push(divElement);\r\n                divElement = getSeparator();\r\n                bottom.push(divElement);\r\n            }\r\n            this._gridColumns = this._gridColumns.trim();\r\n            return [...top, ...middle, ...bottom];\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `hours`\r\n     */\r\n    class HourDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.hourContainer);\r\n            for (let i = 0; i <\r\n                (this._context._options.display.components.useTwentyfourHour ? 24 : 12); i++) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectHour);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.hourContainer)[0];\r\n            let innerDate = this._context._viewDate.clone.startOf(Unit.date);\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectHour}\"]`)\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.css.hour);\r\n                if (!this._context._validation.isValid(innerDate, Unit.hours)) {\r\n                    classes.push(Namespace.css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.hours}`);\r\n                containerClone.innerText = this._context._options.display.components\r\n                    .useTwentyfourHour\r\n                    ? innerDate.hoursFormatted\r\n                    : innerDate.twelveHoursFormatted;\r\n                innerDate.manipulate(1, Unit.hours);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `minutes`\r\n     */\r\n    class MinuteDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.minuteContainer);\r\n            let step = this._context._options.stepping === 1\r\n                ? 5\r\n                : this._context._options.stepping;\r\n            for (let i = 0; i < 60 / step; i++) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectMinute);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.minuteContainer)[0];\r\n            let innerDate = this._context._viewDate.clone.startOf(Unit.hours);\r\n            let step = this._context._options.stepping === 1\r\n                ? 5\r\n                : this._context._options.stepping;\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectMinute}\"]`)\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.css.minute);\r\n                if (!this._context._validation.isValid(innerDate, Unit.minutes)) {\r\n                    classes.push(Namespace.css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.minutes}`);\r\n                containerClone.innerText = innerDate.minutesFormatted;\r\n                innerDate.manipulate(step, Unit.minutes);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `seconds`\r\n     */\r\n    class secondDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.secondContainer);\r\n            for (let i = 0; i < 12; i++) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectSecond);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.secondContainer)[0];\r\n            let innerDate = this._context._viewDate.clone.startOf(Unit.minutes);\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectSecond}\"]`)\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.css.second);\r\n                if (!this._context._validation.isValid(innerDate, Unit.seconds)) {\r\n                    classes.push(Namespace.css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.seconds}`);\r\n                containerClone.innerText = innerDate.secondsFormatted;\r\n                innerDate.manipulate(5, Unit.seconds);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Main class for all things display related.\r\n     */\r\n    class Display {\r\n        constructor(context) {\r\n            this._isVisible = false;\r\n            /**\r\n             * A document click event to hide the widget if click is outside\r\n             * @private\r\n             * @param e MouseEvent\r\n             */\r\n            this._documentClickEvent = (e) => {\r\n                var _a;\r\n                if (this._context._options.debug || window.debug)\r\n                    return;\r\n                if (this._isVisible &&\r\n                    !e.composedPath().includes(this.widget) && // click inside the widget\r\n                    !((_a = e.composedPath()) === null || _a === void 0 ? void 0 : _a.includes(this._context._element)) // click on the element\r\n                ) {\r\n                    this.hide();\r\n                }\r\n            };\r\n            /**\r\n             * Click event for any action like selecting a date\r\n             * @param e MouseEvent\r\n             * @private\r\n             */\r\n            this._actionsClickEvent = (e) => {\r\n                this._context._action.do(e);\r\n            };\r\n            this._context = context;\r\n            this._dateDisplay = new DateDisplay(context);\r\n            this._monthDisplay = new MonthDisplay(context);\r\n            this._yearDisplay = new YearDisplay(context);\r\n            this._decadeDisplay = new DecadeDisplay(context);\r\n            this._timeDisplay = new TimeDisplay(context);\r\n            this._hourDisplay = new HourDisplay(context);\r\n            this._minuteDisplay = new MinuteDisplay(context);\r\n            this._secondDisplay = new secondDisplay(context);\r\n            this._widget = undefined;\r\n        }\r\n        /**\r\n         * Returns the widget body or undefined\r\n         * @private\r\n         */\r\n        get widget() {\r\n            return this._widget;\r\n        }\r\n        /**\r\n         * Returns this visible state of the picker (shown)\r\n         */\r\n        get isVisible() {\r\n            return this._isVisible;\r\n        }\r\n        /**\r\n         * Updates the table for a particular unit. Used when an option as changed or\r\n         * whenever the class list might need to be refreshed.\r\n         * @param unit\r\n         * @private\r\n         */\r\n        _update(unit) {\r\n            if (!this.widget)\r\n                return;\r\n            //todo do I want some kind of error catching or other guards here?\r\n            switch (unit) {\r\n                case Unit.seconds:\r\n                    this._secondDisplay._update();\r\n                    break;\r\n                case Unit.minutes:\r\n                    this._minuteDisplay._update();\r\n                    break;\r\n                case Unit.hours:\r\n                    this._hourDisplay._update();\r\n                    break;\r\n                case Unit.date:\r\n                    this._dateDisplay._update();\r\n                    break;\r\n                case Unit.month:\r\n                    this._monthDisplay._update();\r\n                    break;\r\n                case Unit.year:\r\n                    this._yearDisplay._update();\r\n                    break;\r\n                case 'clock':\r\n                    this._timeDisplay._update();\r\n                    this._update(Unit.hours);\r\n                    this._update(Unit.minutes);\r\n                    this._update(Unit.seconds);\r\n                    break;\r\n                case 'calendar':\r\n                    this._update(Unit.date);\r\n                    this._update(Unit.year);\r\n                    this._update(Unit.month);\r\n                    this._decadeDisplay._update();\r\n                    this._updateCalendarHeader();\r\n                    break;\r\n                case 'all':\r\n                    if (this._hasTime) {\r\n                        this._update('clock');\r\n                    }\r\n                    if (this._hasDate) {\r\n                        this._update('calendar');\r\n                    }\r\n            }\r\n        }\r\n        /**\r\n         * Shows the picker and creates a Popper instance if needed.\r\n         * Add document click event to hide when clicking outside the picker.\r\n         * @fires Events#show\r\n         */\r\n        show() {\r\n            var _a, _b;\r\n            if (this.widget == undefined) {\r\n                if (this._context._options.useCurrent &&\r\n                    !this._context._options.defaultDate &&\r\n                    !((_a = this._context._input) === null || _a === void 0 ? void 0 : _a.value)) {\r\n                    //todo in the td4 branch a pr changed this to allow granularity\r\n                    const date = new DateTime().setLocale(this._context._options.localization.locale);\r\n                    if (!this._context._options.keepInvalid) {\r\n                        let tries = 0;\r\n                        let direction = 1;\r\n                        if ((_b = this._context._options.restrictions.maxDate) === null || _b === void 0 ? void 0 : _b.isBefore(date)) {\r\n                            direction = -1;\r\n                        }\r\n                        while (!this._context._validation.isValid(date)) {\r\n                            date.manipulate(direction, Unit.date);\r\n                            if (tries > 31)\r\n                                break;\r\n                            tries++;\r\n                        }\r\n                    }\r\n                    this._context.dates._setValue(date);\r\n                }\r\n                if (this._context._options.defaultDate) {\r\n                    this._context.dates._setValue(this._context._options.defaultDate);\r\n                }\r\n                this._buildWidget();\r\n                if (this._hasDate) {\r\n                    this._showMode();\r\n                }\r\n                if (!this._context._options.display.inline) {\r\n                    document.body.appendChild(this.widget);\r\n                    this._popperInstance = core.createPopper(this._context._element, this.widget, {\r\n                        modifiers: [{ name: 'eventListeners', enabled: true }],\r\n                        //#2400\r\n                        placement: document.documentElement.dir === 'rtl'\r\n                            ? 'bottom-end'\r\n                            : 'bottom-start',\r\n                    });\r\n                }\r\n                else {\r\n                    this._context._element.appendChild(this.widget);\r\n                }\r\n                if (this._context._options.display.viewMode == 'clock') {\r\n                    this._context._action.do({\r\n                        currentTarget: this.widget.querySelector(`.${Namespace.css.timeContainer}`),\r\n                    }, ActionTypes.showClock);\r\n                }\r\n                this.widget\r\n                    .querySelectorAll('[data-action]')\r\n                    .forEach((element) => element.addEventListener('click', this._actionsClickEvent));\r\n                // show the clock when using sideBySide\r\n                if (this._context._options.display.sideBySide) {\r\n                    this._timeDisplay._update();\r\n                    this.widget.getElementsByClassName(Namespace.css.clockContainer)[0].style.display = 'grid';\r\n                }\r\n            }\r\n            this.widget.classList.add(Namespace.css.show);\r\n            if (!this._context._options.display.inline) {\r\n                this._popperInstance.update();\r\n                document.addEventListener('click', this._documentClickEvent);\r\n            }\r\n            this._context._triggerEvent({ type: Namespace.events.show });\r\n            this._isVisible = true;\r\n        }\r\n        /**\r\n         * Changes the calendar view mode. E.g. month <-> year\r\n         * @param direction -/+ number to move currentViewMode\r\n         * @private\r\n         */\r\n        _showMode(direction) {\r\n            if (!this.widget) {\r\n                return;\r\n            }\r\n            if (direction) {\r\n                const max = Math.max(this._context._minViewModeNumber, Math.min(3, this._context._currentViewMode + direction));\r\n                if (this._context._currentViewMode == max)\r\n                    return;\r\n                this._context._currentViewMode = max;\r\n            }\r\n            this.widget\r\n                .querySelectorAll(`.${Namespace.css.dateContainer} > div:not(.${Namespace.css.calendarHeader}), .${Namespace.css.timeContainer} > div:not(.${Namespace.css.clockContainer})`)\r\n                .forEach((e) => (e.style.display = 'none'));\r\n            const datePickerMode = DatePickerModes[this._context._currentViewMode];\r\n            let picker = this.widget.querySelector(`.${datePickerMode.className}`);\r\n            switch (datePickerMode.className) {\r\n                case Namespace.css.decadesContainer:\r\n                    this._decadeDisplay._update();\r\n                    break;\r\n                case Namespace.css.yearsContainer:\r\n                    this._yearDisplay._update();\r\n                    break;\r\n                case Namespace.css.monthsContainer:\r\n                    this._monthDisplay._update();\r\n                    break;\r\n                case Namespace.css.daysContainer:\r\n                    this._dateDisplay._update();\r\n                    break;\r\n            }\r\n            picker.style.display = 'grid';\r\n            this._updateCalendarHeader();\r\n        }\r\n        _updateCalendarHeader() {\r\n            const showing = [\r\n                ...this.widget.querySelector(`.${Namespace.css.dateContainer} div[style*=\"display: grid\"]`).classList,\r\n            ].find((x) => x.startsWith(Namespace.css.dateContainer));\r\n            const [previous, switcher, next] = this._context._display.widget\r\n                .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                .getElementsByTagName('div');\r\n            switch (showing) {\r\n                case Namespace.css.decadesContainer:\r\n                    previous.setAttribute('title', this._context._options.localization.previousCentury);\r\n                    switcher.setAttribute('title', '');\r\n                    next.setAttribute('title', this._context._options.localization.nextCentury);\r\n                    break;\r\n                case Namespace.css.yearsContainer:\r\n                    previous.setAttribute('title', this._context._options.localization.previousDecade);\r\n                    switcher.setAttribute('title', this._context._options.localization.selectDecade);\r\n                    next.setAttribute('title', this._context._options.localization.nextDecade);\r\n                    break;\r\n                case Namespace.css.monthsContainer:\r\n                    previous.setAttribute('title', this._context._options.localization.previousYear);\r\n                    switcher.setAttribute('title', this._context._options.localization.selectYear);\r\n                    next.setAttribute('title', this._context._options.localization.nextYear);\r\n                    break;\r\n                case Namespace.css.daysContainer:\r\n                    previous.setAttribute('title', this._context._options.localization.previousMonth);\r\n                    switcher.setAttribute('title', this._context._options.localization.selectMonth);\r\n                    next.setAttribute('title', this._context._options.localization.nextMonth);\r\n                    switcher.innerText = this._context._viewDate.format({\r\n                        month: this._context._options.localization.dayViewHeaderFormat,\r\n                    });\r\n                    break;\r\n            }\r\n            switcher.innerText = switcher.getAttribute(showing);\r\n        }\r\n        /**\r\n         * Hides the picker if needed.\r\n         * Remove document click event to hide when clicking outside the picker.\r\n         * @fires Events#hide\r\n         */\r\n        hide() {\r\n            if (!this.widget || !this._isVisible)\r\n                return;\r\n            this.widget.classList.remove(Namespace.css.show);\r\n            if (this._isVisible) {\r\n                this._context._triggerEvent({\r\n                    type: Namespace.events.hide,\r\n                    date: this._context._unset\r\n                        ? null\r\n                        : this._context.dates.lastPicked\r\n                            ? this._context.dates.lastPicked.clone\r\n                            : void 0,\r\n                });\r\n                this._isVisible = false;\r\n            }\r\n            document.removeEventListener('click', this._documentClickEvent);\r\n        }\r\n        /**\r\n         * Toggles the picker's open state. Fires a show/hide event depending.\r\n         */\r\n        toggle() {\r\n            return this._isVisible ? this.hide() : this.show();\r\n        }\r\n        /**\r\n         * Removes document and data-action click listener and reset the widget\r\n         * @private\r\n         */\r\n        _dispose() {\r\n            document.removeEventListener('click', this._documentClickEvent);\r\n            if (!this.widget)\r\n                return;\r\n            this.widget\r\n                .querySelectorAll('[data-action]')\r\n                .forEach((element) => element.removeEventListener('click', this._actionsClickEvent));\r\n            this.widget.parentNode.removeChild(this.widget);\r\n            this._widget = undefined;\r\n        }\r\n        /**\r\n         * Builds the widgets html template.\r\n         * @private\r\n         */\r\n        _buildWidget() {\r\n            const template = document.createElement('div');\r\n            template.classList.add(Namespace.css.widget);\r\n            const dateView = document.createElement('div');\r\n            dateView.classList.add(Namespace.css.dateContainer);\r\n            dateView.append(this._headTemplate, this._decadeDisplay._picker, this._yearDisplay._picker, this._monthDisplay._picker, this._dateDisplay._picker);\r\n            const timeView = document.createElement('div');\r\n            timeView.classList.add(Namespace.css.timeContainer);\r\n            timeView.appendChild(this._timeDisplay._picker);\r\n            timeView.appendChild(this._hourDisplay._picker);\r\n            timeView.appendChild(this._minuteDisplay._picker);\r\n            timeView.appendChild(this._secondDisplay._picker);\r\n            const toolbar = document.createElement('div');\r\n            toolbar.classList.add(Namespace.css.toolbar);\r\n            toolbar.append(...this._toolbar);\r\n            if (this._context._options.display.inline) {\r\n                template.classList.add(Namespace.css.inline);\r\n            }\r\n            if (this._context._options.display.calendarWeeks) {\r\n                template.classList.add('calendarWeeks');\r\n            }\r\n            if (this._context._options.display.sideBySide &&\r\n                this._hasDate &&\r\n                this._hasTime) {\r\n                template.classList.add(Namespace.css.sideBySide);\r\n                if (this._context._options.display.toolbarPlacement === 'top') {\r\n                    template.appendChild(toolbar);\r\n                }\r\n                const row = document.createElement('div');\r\n                row.classList.add('td-row');\r\n                dateView.classList.add('td-half');\r\n                timeView.classList.add('td-half');\r\n                row.appendChild(dateView);\r\n                row.appendChild(timeView);\r\n                template.appendChild(row);\r\n                if (this._context._options.display.toolbarPlacement === 'bottom') {\r\n                    template.appendChild(toolbar);\r\n                }\r\n                this._widget = template;\r\n                return;\r\n            }\r\n            if (this._context._options.display.toolbarPlacement === 'top') {\r\n                template.appendChild(toolbar);\r\n            }\r\n            if (this._hasDate) {\r\n                if (this._hasTime) {\r\n                    dateView.classList.add(Namespace.css.collapse);\r\n                    if (this._context._options.display.viewMode !== 'clock')\r\n                        dateView.classList.add(Namespace.css.show);\r\n                }\r\n                template.appendChild(dateView);\r\n            }\r\n            if (this._hasTime) {\r\n                if (this._hasDate) {\r\n                    timeView.classList.add(Namespace.css.collapse);\r\n                    if (this._context._options.display.viewMode === 'clock')\r\n                        timeView.classList.add(Namespace.css.show);\r\n                }\r\n                template.appendChild(timeView);\r\n            }\r\n            if (this._context._options.display.toolbarPlacement === 'bottom') {\r\n                template.appendChild(toolbar);\r\n            }\r\n            const arrow = document.createElement('div');\r\n            arrow.classList.add('arrow');\r\n            arrow.setAttribute('data-popper-arrow', '');\r\n            template.appendChild(arrow);\r\n            this._widget = template;\r\n        }\r\n        /**\r\n         * Returns true if the hours, minutes, or seconds component is turned on\r\n         */\r\n        get _hasTime() {\r\n            return (this._context._options.display.components.clock &&\r\n                (this._context._options.display.components.hours ||\r\n                    this._context._options.display.components.minutes ||\r\n                    this._context._options.display.components.seconds));\r\n        }\r\n        /**\r\n         * Returns true if the year, month, or date component is turned on\r\n         */\r\n        get _hasDate() {\r\n            return (this._context._options.display.components.calendar &&\r\n                (this._context._options.display.components.year ||\r\n                    this._context._options.display.components.month ||\r\n                    this._context._options.display.components.date));\r\n        }\r\n        /**\r\n         * Get the toolbar html based on options like buttons.today\r\n         * @private\r\n         */\r\n        get _toolbar() {\r\n            const toolbar = [];\r\n            if (this._context._options.display.buttons.today) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.today);\r\n                div.setAttribute('title', this._context._options.localization.today);\r\n                div.appendChild(this._iconTag(this._context._options.display.icons.today));\r\n                toolbar.push(div);\r\n            }\r\n            if (!this._context._options.display.sideBySide &&\r\n                this._hasDate &&\r\n                this._hasTime) {\r\n                let title, icon;\r\n                if (this._context._options.display.viewMode === 'clock') {\r\n                    title = this._context._options.localization.selectDate;\r\n                    icon = this._context._options.display.icons.date;\r\n                }\r\n                else {\r\n                    title = this._context._options.localization.selectTime;\r\n                    icon = this._context._options.display.icons.time;\r\n                }\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.togglePicker);\r\n                div.setAttribute('title', title);\r\n                div.appendChild(this._iconTag(icon));\r\n                toolbar.push(div);\r\n            }\r\n            if (this._context._options.display.buttons.clear) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.clear);\r\n                div.setAttribute('title', this._context._options.localization.clear);\r\n                div.appendChild(this._iconTag(this._context._options.display.icons.clear));\r\n                toolbar.push(div);\r\n            }\r\n            if (this._context._options.display.buttons.close) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.close);\r\n                div.setAttribute('title', this._context._options.localization.close);\r\n                div.appendChild(this._iconTag(this._context._options.display.icons.close));\r\n                toolbar.push(div);\r\n            }\r\n            return toolbar;\r\n        }\r\n        /***\r\n         * Builds the base header template with next and previous icons\r\n         * @private\r\n         */\r\n        get _headTemplate() {\r\n            const calendarHeader = document.createElement('div');\r\n            calendarHeader.classList.add(Namespace.css.calendarHeader);\r\n            const previous = document.createElement('div');\r\n            previous.classList.add(Namespace.css.previous);\r\n            previous.setAttribute('data-action', ActionTypes.previous);\r\n            previous.appendChild(this._iconTag(this._context._options.display.icons.previous));\r\n            const switcher = document.createElement('div');\r\n            switcher.classList.add(Namespace.css.switch);\r\n            switcher.setAttribute('data-action', ActionTypes.pickerSwitch);\r\n            const next = document.createElement('div');\r\n            next.classList.add(Namespace.css.next);\r\n            next.setAttribute('data-action', ActionTypes.next);\r\n            next.appendChild(this._iconTag(this._context._options.display.icons.next));\r\n            calendarHeader.append(previous, switcher, next);\r\n            return calendarHeader;\r\n        }\r\n        /**\r\n         * Builds an icon tag as either an `<i>`\r\n         * or with icons.type is `sprites` then an svg tag instead\r\n         * @param iconClass\r\n         * @private\r\n         */\r\n        _iconTag(iconClass) {\r\n            if (this._context._options.display.icons.type === 'sprites') {\r\n                const svg = document.createElement('svg');\r\n                svg.innerHTML = `<use xlink:href='${iconClass}'></use>`;\r\n                return svg;\r\n            }\r\n            const icon = document.createElement('i');\r\n            DOMTokenList.prototype.add.apply(icon.classList, iconClass.split(' '));\r\n            return icon;\r\n        }\r\n        /**\r\n         * Causes the widget to get rebuilt on next show. If the picker is already open\r\n         * then hide and reshow it.\r\n         * @private\r\n         */\r\n        _rebuild() {\r\n            const wasVisible = this._isVisible;\r\n            if (wasVisible)\r\n                this.hide();\r\n            this._dispose();\r\n            if (wasVisible) {\r\n                this.show();\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * Main class for date validation rules based on the options provided.\r\n     */\r\n    class Validation {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Checks to see if the target date is valid based on the rules provided in the options.\r\n         * Granularity can be provide to chek portions of the date instead of the whole.\r\n         * @param targetDate\r\n         * @param granularity\r\n         */\r\n        isValid(targetDate, granularity) {\r\n            var _a;\r\n            if (this._context._options.restrictions.disabledDates.length > 0 &&\r\n                this._isInDisabledDates(targetDate)) {\r\n                return false;\r\n            }\r\n            if (this._context._options.restrictions.enabledDates.length > 0 &&\r\n                !this._isInEnabledDates(targetDate)) {\r\n                return false;\r\n            }\r\n            if (((_a = this._context._options.restrictions.daysOfWeekDisabled) === null || _a === void 0 ? void 0 : _a.length) > 0 &&\r\n                this._context._options.restrictions.daysOfWeekDisabled.indexOf(targetDate.weekDay) !== -1) {\r\n                return false;\r\n            }\r\n            if (this._context._options.restrictions.minDate &&\r\n                targetDate.isBefore(this._context._options.restrictions.minDate, granularity)) {\r\n                return false;\r\n            }\r\n            if (this._context._options.restrictions.maxDate &&\r\n                targetDate.isAfter(this._context._options.restrictions.maxDate, granularity)) {\r\n                return false;\r\n            }\r\n            if (granularity === Unit.hours ||\r\n                granularity === Unit.minutes ||\r\n                granularity === Unit.seconds) {\r\n                if (this._context._options.restrictions.disabledHours.length > 0 &&\r\n                    this._isInDisabledHours(targetDate)) {\r\n                    return false;\r\n                }\r\n                if (this._context._options.restrictions.enabledHours.length > 0 &&\r\n                    !this._isInEnabledHours(targetDate)) {\r\n                    return false;\r\n                }\r\n                if (this._context._options.restrictions.disabledTimeIntervals.length > 0) {\r\n                    for (let i = 0; i < this._context._options.restrictions.disabledTimeIntervals.length; i++) {\r\n                        if (targetDate.isBetween(this._context._options.restrictions.disabledTimeIntervals[i].from, this._context._options.restrictions.disabledTimeIntervals[i].to))\r\n                            return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        /**\r\n         * Checks to see if the disabledDates option is in use and returns true (meaning invalid)\r\n         * if the `testDate` is with in the array. Granularity is by date.\r\n         * @param testDate\r\n         * @private\r\n         */\r\n        _isInDisabledDates(testDate) {\r\n            if (!this._context._options.restrictions.disabledDates ||\r\n                this._context._options.restrictions.disabledDates.length === 0)\r\n                return false;\r\n            const formattedDate = testDate.format(Dates.getFormatByUnit(Unit.date));\r\n            return this._context._options.restrictions.disabledDates\r\n                .map((x) => x.format(Dates.getFormatByUnit(Unit.date)))\r\n                .find((x) => x === formattedDate);\r\n        }\r\n        /**\r\n         * Checks to see if the enabledDates option is in use and returns true (meaning valid)\r\n         * if the `testDate` is with in the array. Granularity is by date.\r\n         * @param testDate\r\n         * @private\r\n         */\r\n        _isInEnabledDates(testDate) {\r\n            if (!this._context._options.restrictions.enabledDates ||\r\n                this._context._options.restrictions.enabledDates.length === 0)\r\n                return true;\r\n            const formattedDate = testDate.format(Dates.getFormatByUnit(Unit.date));\r\n            return this._context._options.restrictions.enabledDates\r\n                .map((x) => x.format(Dates.getFormatByUnit(Unit.date)))\r\n                .find((x) => x === formattedDate);\r\n        }\r\n        /**\r\n         * Checks to see if the disabledHours option is in use and returns true (meaning invalid)\r\n         * if the `testDate` is with in the array. Granularity is by hours.\r\n         * @param testDate\r\n         * @private\r\n         */\r\n        _isInDisabledHours(testDate) {\r\n            if (!this._context._options.restrictions.disabledHours ||\r\n                this._context._options.restrictions.disabledHours.length === 0)\r\n                return false;\r\n            const formattedDate = testDate.hours;\r\n            return this._context._options.restrictions.disabledHours.find((x) => x === formattedDate);\r\n        }\r\n        /**\r\n         * Checks to see if the enabledHours option is in use and returns true (meaning valid)\r\n         * if the `testDate` is with in the array. Granularity is by hours.\r\n         * @param testDate\r\n         * @private\r\n         */\r\n        _isInEnabledHours(testDate) {\r\n            if (!this._context._options.restrictions.enabledHours ||\r\n                this._context._options.restrictions.enabledHours.length === 0)\r\n                return true;\r\n            const formattedDate = testDate.hours;\r\n            return this._context._options.restrictions.enabledHours.find((x) => x === formattedDate);\r\n        }\r\n    }\n\n    /**\r\n     * A robust and powerful date/time picker component.\r\n     */\r\n    class TempusDominus {\r\n        constructor(element, options = {}) {\r\n            this._currentViewMode = 0;\r\n            this._subscribers = {};\r\n            this._minViewModeNumber = 0;\r\n            this._isDisabled = false;\r\n            this._notifyChangeEventContext = 0;\r\n            this._viewDate = new DateTime();\r\n            /**\r\n             * Event for when the input field changes. This is a class level method so there's\r\n             * something for the remove listener function.\r\n             * @private\r\n             */\r\n            this._inputChangeEvent = () => {\r\n                const setViewDate = () => {\r\n                    if (this.dates.lastPicked)\r\n                        this._viewDate = this.dates.lastPicked;\r\n                };\r\n                const value = this._input.value;\r\n                if (this._options.multipleDates) {\r\n                    try {\r\n                        const valueSplit = value.split(this._options.multipleDatesSeparator);\r\n                        for (let i = 0; i < valueSplit.length; i++) {\r\n                            if (this._options.hooks.inputParse) {\r\n                                this.dates.set(this._options.hooks.inputParse(this, valueSplit[i]), i, 'input');\r\n                            }\r\n                            else {\r\n                                this.dates.set(valueSplit[i], i, 'input');\r\n                            }\r\n                        }\r\n                        setViewDate();\r\n                    }\r\n                    catch (_a) {\r\n                        console.warn('TD: Something went wrong trying to set the multidate values from the input field.');\r\n                    }\r\n                }\r\n                else {\r\n                    if (this._options.hooks.inputParse) {\r\n                        this.dates.set(this._options.hooks.inputParse(this, value), 0, 'input');\r\n                    }\r\n                    else {\r\n                        this.dates.set(value, 0, 'input');\r\n                    }\r\n                    setViewDate();\r\n                }\r\n            };\r\n            /**\r\n             * Event for when the toggle is clicked. This is a class level method so there's\r\n             * something for the remove listener function.\r\n             * @private\r\n             */\r\n            this._toggleClickEvent = () => {\r\n                this.toggle();\r\n            };\r\n            if (!element) {\r\n                Namespace.errorMessages.mustProvideElement;\r\n            }\r\n            this._element = element;\r\n            this._options = this._initializeOptions(options, DefaultOptions, true);\r\n            this._viewDate.setLocale(this._options.localization.locale);\r\n            this._unset = true;\r\n            this._display = new Display(this);\r\n            this._validation = new Validation(this);\r\n            this.dates = new Dates(this);\r\n            this._action = new Actions(this);\r\n            this._initializeInput();\r\n            this._initializeToggle();\r\n            if (this._options.display.inline)\r\n                this._display.show();\r\n        }\r\n        get viewDate() {\r\n            return this._viewDate;\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Update the picker options. If `reset` is provide `options` will be merged with DefaultOptions instead.\r\n         * @param options\r\n         * @param reset\r\n         * @public\r\n         */\r\n        updateOptions(options, reset = false) {\r\n            if (reset)\r\n                this._options = this._initializeOptions(options, DefaultOptions);\r\n            else\r\n                this._options = this._initializeOptions(options, this._options);\r\n            this._display._rebuild();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Toggles the picker open or closed. If the picker is disabled, nothing will happen.\r\n         * @public\r\n         */\r\n        toggle() {\r\n            if (this._isDisabled)\r\n                return;\r\n            this._display.toggle();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Shows the picker unless the picker is disabled.\r\n         * @public\r\n         */\r\n        show() {\r\n            if (this._isDisabled)\r\n                return;\r\n            this._display.show();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Hides the picker unless the picker is disabled.\r\n         * @public\r\n         */\r\n        hide() {\r\n            this._display.hide();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Disables the picker and the target input field.\r\n         * @public\r\n         */\r\n        disable() {\r\n            var _a;\r\n            this._isDisabled = true;\r\n            // todo this might be undesired. If a dev disables the input field to\r\n            // only allow using the picker, this will break that.\r\n            (_a = this._input) === null || _a === void 0 ? void 0 : _a.setAttribute('disabled', 'disabled');\r\n            this._display.hide();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Enables the picker and the target input field.\r\n         * @public\r\n         */\r\n        enable() {\r\n            var _a;\r\n            this._isDisabled = false;\r\n            (_a = this._input) === null || _a === void 0 ? void 0 : _a.removeAttribute('disabled');\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Clears all the selected dates\r\n         * @public\r\n         */\r\n        clear() {\r\n            this.dates.clear();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Allows for a direct subscription to picker events, without having to use addEventListener on the element.\r\n         * @param eventTypes See Namespace.Events\r\n         * @param callbacks Function to call when event is triggered\r\n         * @public\r\n         */\r\n        subscribe(eventTypes, callbacks) {\r\n            if (typeof eventTypes === 'string') {\r\n                eventTypes = [eventTypes];\r\n            }\r\n            let callBackArray = [];\r\n            if (!Array.isArray(callbacks)) {\r\n                callBackArray = [callbacks];\r\n            }\r\n            else {\r\n                callBackArray = callbacks;\r\n            }\r\n            if (eventTypes.length !== callBackArray.length) {\r\n                Namespace.errorMessages.subscribeMismatch;\r\n            }\r\n            const returnArray = [];\r\n            for (let i = 0; i < eventTypes.length; i++) {\r\n                const eventType = eventTypes[i];\r\n                if (!Array.isArray(this._subscribers[eventType])) {\r\n                    this._subscribers[eventType] = [];\r\n                }\r\n                this._subscribers[eventType].push(callBackArray[i]);\r\n                returnArray.push({\r\n                    unsubscribe: this._unsubscribe.bind(this, eventType, this._subscribers[eventType].length - 1),\r\n                });\r\n                if (eventTypes.length === 1) {\r\n                    return returnArray[0];\r\n                }\r\n            }\r\n            return returnArray;\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Hides the picker and removes event listeners\r\n         */\r\n        dispose() {\r\n            var _a, _b;\r\n            this._display.hide();\r\n            // this will clear the document click event listener\r\n            this._display._dispose();\r\n            (_a = this._input) === null || _a === void 0 ? void 0 : _a.removeEventListener('change', this._inputChangeEvent);\r\n            if (this._options.allowInputToggle) {\r\n                (_b = this._input) === null || _b === void 0 ? void 0 : _b.removeEventListener('click', this._toggleClickEvent);\r\n            }\r\n            this._toggle.removeEventListener('click', this._toggleClickEvent);\r\n            this._subscribers = {};\r\n        }\r\n        /**\r\n         * Triggers an event like ChangeEvent when the picker has updated the value\r\n         * of a selected date.\r\n         * @param event Accepts a BaseEvent object.\r\n         * @private\r\n         */\r\n        _triggerEvent(event) {\r\n            // checking hasOwnProperty because the BasicEvent also falls through here otherwise\r\n            if (event && event.hasOwnProperty('date')) {\r\n                const { date, oldDate, isClear } = event;\r\n                // this was to prevent a max call stack error\r\n                // https://github.com/tempusdominus/core/commit/15a280507f5277b31b0b3319ab1edc7c19a000fb\r\n                // todo see if this is still needed or if there's a cleaner way\r\n                this._notifyChangeEventContext++;\r\n                if ((date && oldDate && date.isSame(oldDate)) ||\r\n                    (!isClear && !date && !oldDate) ||\r\n                    this._notifyChangeEventContext > 1) {\r\n                    this._notifyChangeEventContext = 0;\r\n                    return;\r\n                }\r\n                this._handleAfterChangeEvent(event);\r\n            }\r\n            this._element.dispatchEvent(new CustomEvent(event.type, { detail: event }));\r\n            if (window.jQuery) {\r\n                const $ = window.jQuery;\r\n                $(this._element).trigger(event);\r\n            }\r\n            const publish = () => {\r\n                // return if event is not subscribed\r\n                if (!Array.isArray(this._subscribers[event.type])) {\r\n                    return;\r\n                }\r\n                // Trigger callback for each subscriber\r\n                this._subscribers[event.type].forEach((callback) => {\r\n                    callback(event);\r\n                });\r\n            };\r\n            publish();\r\n            this._notifyChangeEventContext = 0;\r\n        }\r\n        /**\r\n         * Fires a ViewUpdate event when, for example, the month view is changed.\r\n         * @param {Unit} unit\r\n         * @private\r\n         */\r\n        _viewUpdate(unit) {\r\n            this._triggerEvent({\r\n                type: Namespace.events.update,\r\n                change: unit,\r\n                viewDate: this._viewDate.clone,\r\n            });\r\n        }\r\n        _unsubscribe(eventName, index) {\r\n            this._subscribers[eventName].splice(index, 1);\r\n        }\r\n        /**\r\n         * Merges two Option objects together and validates options type\r\n         * @param config new Options\r\n         * @param mergeTo Options to merge into\r\n         * @param includeDataset When true, the elements data-td attributes will be included in the\r\n         * @private\r\n         */\r\n        _initializeOptions(config, mergeTo, includeDataset = false) {\r\n            var _a;\r\n            config = OptionConverter._mergeOptions(config, mergeTo);\r\n            if (includeDataset)\r\n                config = OptionConverter._dataToOptions(this._element, config);\r\n            OptionConverter._validateConflcits(config);\r\n            config.viewDate = config.viewDate.setLocale(config.localization.locale);\r\n            if (!this._viewDate.isSame(config.viewDate)) {\r\n                this._viewDate = config.viewDate;\r\n            }\r\n            /**\r\n             * Sets the minimum view allowed by the picker. For example the case of only\r\n             * allowing year and month to be selected but not date.\r\n             */\r\n            if (config.display.components.year) {\r\n                this._minViewModeNumber = 2;\r\n            }\r\n            if (config.display.components.month) {\r\n                this._minViewModeNumber = 1;\r\n            }\r\n            if (config.display.components.date) {\r\n                this._minViewModeNumber = 0;\r\n            }\r\n            this._currentViewMode = Math.max(this._minViewModeNumber, this._currentViewMode);\r\n            // Update view mode if needed\r\n            if (DatePickerModes[this._currentViewMode].name !== config.display.viewMode) {\r\n                this._currentViewMode = Math.max(DatePickerModes.findIndex((x) => x.name === config.display.viewMode), this._minViewModeNumber);\r\n            }\r\n            // defaults the input format based on the components enabled\r\n            if (config.hooks.inputFormat === undefined) {\r\n                const components = config.display.components;\r\n                config.hooks.inputFormat = (_, date) => {\r\n                    if (config.display.format && typeof config.display.format === 'string') //***\r\n                        return date ? luxon__namespace.DateTime.fromJSDate(date).setLocale(config.localization.locale).toFormat(config.display.format) : \"\";\r\n                    else\r\n                        return date.format({\r\n                            year: components.calendar && components.year ? 'numeric' : undefined,\r\n                            month: components.calendar && components.month ? '2-digit' : undefined,\r\n                            day: components.calendar && components.date ? '2-digit' : undefined,\r\n                            hour: components.clock && components.hours\r\n                                ? components.useTwentyfourHour\r\n                                    ? '2-digit'\r\n                                    : 'numeric'\r\n                                : undefined,\r\n                            minute: components.clock && components.minutes ? '2-digit' : undefined,\r\n                            second: components.clock && components.seconds ? '2-digit' : undefined,\r\n                            hour12: !components.useTwentyfourHour,\r\n                        });\r\n                };\r\n            }\r\n            if (config.hooks.inputParse === undefined) { //***\r\n                if (config.display.format && typeof config.display.format == 'string') {\r\n                    config.hooks.inputParse = (_, value) => {\r\n                        let numberingSystem = (new Intl.NumberFormat(config.localization.locale)).resolvedOptions().numberingSystem;\r\n                        let parsedDate = new DateTime(luxon__namespace.DateTime.fromFormat(value, config.display.format, { locale: config.localization.locale, numberingSystem }).toJSDate());\r\n                        // Check if the date is valid (An invalid date object returns NaN for getTime() and NaN is the only object not strictly equal to itself.)\r\n                        if (parsedDate && parsedDate.getTime() === parsedDate.getTime())\r\n                            return parsedDate.setLocale(config.localization.locale);\r\n                        else\r\n                            return value;\r\n                    };\r\n                }\r\n            }\r\n            if ((_a = this._display) === null || _a === void 0 ? void 0 : _a.isVisible) {\r\n                this._display._update('all');\r\n            }\r\n            return config;\r\n        }\r\n        /**\r\n         * Checks if an input field is being used, attempts to locate one and sets an\r\n         * event listener if found.\r\n         * @private\r\n         */\r\n        _initializeInput() {\r\n            if (this._element.tagName == 'INPUT') {\r\n                this._input = this._element;\r\n            }\r\n            else {\r\n                let query = this._element.dataset.tdTargetInput;\r\n                if (query == undefined || query == 'nearest') {\r\n                    this._input = this._element.querySelector('input');\r\n                }\r\n                else {\r\n                    this._input = this._element.querySelector(query);\r\n                }\r\n            }\r\n            if (!this._input)\r\n                return;\r\n            this._input.addEventListener('change', this._inputChangeEvent);\r\n            if (this._options.allowInputToggle) {\r\n                this._input.addEventListener('click', this._toggleClickEvent);\r\n            }\r\n            if (this._input.value) {\r\n                this._inputChangeEvent();\r\n            }\r\n        }\r\n        /**\r\n         * Attempts to locate a toggle for the picker and sets an event listener\r\n         * @private\r\n         */\r\n        _initializeToggle() {\r\n            if (this._options.display.inline)\r\n                return;\r\n            let query = this._element.dataset.tdTargetToggle;\r\n            if (query == 'nearest') {\r\n                query = '[data-td-toggle=\"datetimepicker\"]';\r\n            }\r\n            this._toggle =\r\n                query == undefined ? this._element : this._element.querySelector(query);\r\n            this._toggle.addEventListener('click', this._toggleClickEvent);\r\n        }\r\n        /**\r\n         * If the option is enabled this will render the clock view after a date pick.\r\n         * @param e change event\r\n         * @private\r\n         */\r\n        _handleAfterChangeEvent(e) {\r\n            var _a, _b;\r\n            if (\r\n            // options is disabled\r\n            !this._options.promptTimeOnDateChange ||\r\n                this._options.display.inline ||\r\n                this._options.display.sideBySide ||\r\n                // time is disabled\r\n                !this._display._hasTime ||\r\n                (\r\n                // clock component is already showing\r\n                (_a = this._display.widget) === null || _a === void 0 ? void 0 : _a.getElementsByClassName(Namespace.css.show)[0].classList.contains(Namespace.css.timeContainer)))\r\n                return;\r\n            // First time ever. If useCurrent option is set to true (default), do nothing\r\n            // because the first date is selected automatically.\r\n            // or date didn't change (time did) or date changed because time did.\r\n            if ((!e.oldDate && this._options.useCurrent) ||\r\n                (e.oldDate && ((_b = e.date) === null || _b === void 0 ? void 0 : _b.isSame(e.oldDate)))) {\r\n                return;\r\n            }\r\n            clearTimeout(this._currentPromptTimeTimeout);\r\n            this._currentPromptTimeTimeout = setTimeout(() => {\r\n                if (this._display.widget) {\r\n                    this._action.do({\r\n                        currentTarget: this._display.widget.querySelector(`.${Namespace.css.switch} div`),\r\n                    }, ActionTypes.togglePicker);\r\n                }\r\n            }, this._options.promptTimeOnDateChangeTransitionDelay);\r\n        }\r\n    }\n\n    var _tempusDominus = {\n        __proto__: null,\n        TempusDominus: TempusDominus,\n        Namespace: Namespace,\n        DefaultOptions: DefaultOptions,\n        DateTime: DateTime,\n        get Unit () { return Unit; }\n    };\n\n    /*global $ */\n\n    //window.tempusDominus.Namespace.Events\n    const tempusDominus = _tempusDominus; //***\n\n    tempusDominus.jQueryInterface = function (option, argument) {\n      if (this.length === 1) {\n        return tempusDominus.jQueryHandleThis(this, option, argument);\n      }\n      // \"this\" is jquery here\n      return this.each(function () {\n        tempusDominus.jQueryHandleThis(this, option, argument);\n      });\n    };\n\n    tempusDominus.jQueryHandleThis = function (me, option, argument) {\n      let data = $__default['default'](me).data(tempusDominus.Namespace.dataKey);\n      if (typeof option === 'object') {\n        option = $__default['default'].extend({}, tempusDominus.DefaultOptions, option); //***\n      }\n\n      if (!data) {\n        data = new tempusDominus.TempusDominus($__default['default'](me)[0], option);\n        $__default['default'](me).data(tempusDominus.Namespace.dataKey, data);\n      }\n\n      if (typeof option === 'string') {\n        if (data[option] === undefined) {\n          throw new Error(`No method named \"${option}\"`);\n        }\n        if (argument === undefined) {\n          return data[option]();\n        } else {\n          if (option === 'date') {\n            data.isDateUpdateThroughDateOptionFromClientCode = true;\n          }\n          const ret = data[option](argument);\n          data.isDateUpdateThroughDateOptionFromClientCode = false;\n          return ret;\n        }\n      }\n    };\n\n    tempusDominus.getSelectorFromElement = function ($element) {\n      let selector = $element.data('target'),\n        $selector;\n\n      if (!selector) {\n        selector = $element.attr('href') || '';\n        selector = /^#[a-z]/i.test(selector) ? selector : null;\n      }\n      $selector = $__default['default'](selector);\n      if ($selector.length === 0) {\n        return $element;\n      }\n\n      if (!$selector.data(tempusDominus.Namespace.dataKey)) {\n        $__default['default'].extend({}, $selector.data(), $__default['default'](this).data());\n      }\n\n      return $selector;\n    };\n\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n    //*** $(document)\n    //   .on(\n    //     `click${tempusDominus.Namespace.Events.key}.data-api`,\n    //     `[data-td-toggle=\"${tempusDominus.Namespace.DATA_KEY}\"]`, //***\n    //     function () {\n    //       const $originalTarget = $(this),\n    //         $target = tempusDominus.getSelectorFromElement($originalTarget),\n    //         config = $target.data(tempusDominus.Namespace.DATA_KEY);\n    //       if ($target.length === 0) {\n    //         return;\n    //       }\n    //       if (\n    //         config.options.allowInputToggle && //***\n    //         $originalTarget.is(`input[data-td-toggle=\"${tempusDominus.Namespace.DATA_KEY}\"]`) //***\n    //       ) {\n    //         return;\n    //       }\n    //       tempusDominus.jQueryInterface.call($target, 'toggle');\n    //     }\n    //   )\n    //   .on(\n    //     tempusDominus.Namespace.Events.change,\n    //     `.${tempusDominus.Namespace.NAME}-input`,\n    //     function (event) {\n    //       const $target = tempusDominus.getSelectorFromElement($(this));\n    //       if ($target.length === 0 || event.isInit) {\n    //         return;\n    //       }\n    //       tempusDominus.jQueryInterface.call($target, '_change', event);\n    //     }\n    //   )\n    //   .on(\n    //     tempusDominus.Namespace.Events.blur,\n    //     `.${tempusDominus.Namespace.NAME}-input`,\n    //     function (event) {\n    //       const $target = tempusDominus.getSelectorFromElement($(this)),\n    //         config = $target.data(tempusDominus.Namespace.DATA_KEY);\n    //       if ($target.length === 0) {\n    //         return;\n    //       }\n    //       if (config.options.debug || window.debug) { //***\n    //         return;\n    //       }\n    //       tempusDominus.jQueryInterface.call($target, 'hide', event);\n    //     }\n    //   )\n    //   /*.on(tempusDominus.Namespace.Events.keydown, `.${tempusDominus.Namespace.NAME}-input`, function (event) {\n    //     const $target = tempusDominus.getSelectorFromElement($(this));\n    //     if ($target.length === 0) {\n    //       return;\n    //     }\n    //     tempusDominus.jQueryInterface.call($target, '_keydown', event);\n    //   })\n    //   .on(tempusDominus.Namespace.Events.keyup, `.${tempusDominus.Namespace.NAME}-input`, function (event) {\n    //     const $target = tempusDominus.getSelectorFromElement($(this));\n    //     if ($target.length === 0) {\n    //       return;\n    //     }\n    //     tempusDominus.jQueryInterface.call($target, '_keyup', event);\n    //   })*/\n    //   .on(\n    //     tempusDominus.Namespace.Events.focus,\n    //     `.${tempusDominus.Namespace.NAME}-input`,\n    //     function (event) {\n    //       const $target = tempusDominus.getSelectorFromElement($(this)),\n    //         config = $target.data(tempusDominus.Namespace.DATA_KEY);\n    //       if ($target.length === 0) {\n    //         return;\n    //       }\n    //       if (!config.options.allowInputToggle) { //***\n    //         return;\n    //       }\n    //       tempusDominus.jQueryInterface.call($target, 'show', event);\n    //     }\n    //   );\n    const name = 'tempusDominus';\n    $__default['default'].fn[name] = tempusDominus.jQueryInterface;\n    $__default['default'].fn[name].Constructor = tempusDominus.TempusDominus;\n    $__default['default'].fn[name].noConflict = function () {\n      $__default['default'].fn[name] = $__default['default'].fn[name];\n      return tempusDominus.jQueryInterface;\n    };\n\n    return tempusDominus;\n\n}(jQuery, Popper, luxon));\n//# sourceMappingURL=tempus-dominus.js.map\n"]}